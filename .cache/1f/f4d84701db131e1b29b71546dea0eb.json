{"id":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","dependencies":[{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/package.json","includedInParent":true,"mtime":1592223810651},{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/source-list-map/package.json","includedInParent":true,"mtime":1591602462551},{"name":"./base64-vlq","loc":{"line":7,"column":26},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/source-list-map/lib/fromStringWithSourceMap.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/source-list-map/lib/base64-vlq.js"},{"name":"./SourceNode","loc":{"line":8,"column":27},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/source-list-map/lib/fromStringWithSourceMap.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/source-list-map/lib/SourceNode.js"},{"name":"./CodeNode","loc":{"line":9,"column":25},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/source-list-map/lib/fromStringWithSourceMap.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/source-list-map/lib/CodeNode.js"},{"name":"./SourceListMap","loc":{"line":10,"column":30},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/source-list-map/lib/fromStringWithSourceMap.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/source-list-map/lib/SourceListMap.js"}],"generated":{"js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst base64VLQ = require(\"./base64-vlq\");\r\nconst SourceNode = require(\"./SourceNode\");\r\nconst CodeNode = require(\"./CodeNode\");\r\nconst SourceListMap = require(\"./SourceListMap\");\r\n\r\nmodule.exports = function fromStringWithSourceMap(code, map) {\r\n\tconst sources = map.sources;\r\n\tconst sourcesContent = map.sourcesContent;\r\n\tconst mappings = map.mappings.split(\";\");\r\n\tconst lines = code.split(\"\\n\");\r\n\tconst nodes = [];\r\n\tlet currentNode = null;\r\n\tlet currentLine = 1;\r\n\tlet currentSourceIdx = 0;\r\n\tlet currentSourceNodeLine;\r\n\tmappings.forEach(function(mapping, idx) {\r\n\t\tlet line = lines[idx];\r\n\t\tif(typeof line === 'undefined') return;\r\n\t\tif(idx !== lines.length - 1) line += \"\\n\";\r\n\t\tif(!mapping)\r\n\t\t\treturn addCode(line);\r\n\t\tmapping = { value: 0, rest: mapping };\r\n\t\tlet lineAdded = false;\r\n\t\twhile(mapping.rest)\r\n\t\t\tlineAdded = processMapping(mapping, line, lineAdded) || lineAdded;\r\n\t\tif(!lineAdded)\r\n\t\t\taddCode(line);\r\n\t});\r\n\tif(mappings.length < lines.length) {\r\n\t\tlet idx = mappings.length;\r\n\t\twhile(!lines[idx].trim() && idx < lines.length-1) {\r\n\t\t\taddCode(lines[idx] + \"\\n\");\r\n\t\t\tidx++;\r\n\t\t}\r\n\t\taddCode(lines.slice(idx).join(\"\\n\"));\r\n\t}\r\n\treturn new SourceListMap(nodes);\r\n\tfunction processMapping(mapping, line, ignore) {\r\n\t\tif(mapping.rest && mapping.rest[0] !== \",\") {\r\n\t\t\tbase64VLQ.decode(mapping.rest, mapping);\r\n\t\t}\r\n\t\tif(!mapping.rest)\r\n\t\t\treturn false;\r\n\t\tif(mapping.rest[0] === \",\") {\r\n\t\t\tmapping.rest = mapping.rest.substr(1);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tbase64VLQ.decode(mapping.rest, mapping);\r\n\t\tconst sourceIdx = mapping.value + currentSourceIdx;\r\n\t\tcurrentSourceIdx = sourceIdx;\r\n\r\n\t\tlet linePosition;\r\n\t\tif(mapping.rest && mapping.rest[0] !== \",\") {\r\n\t\t\tbase64VLQ.decode(mapping.rest, mapping);\r\n\t\t\tlinePosition = mapping.value + currentLine;\r\n\t\t\tcurrentLine = linePosition;\r\n\t\t} else {\r\n\t\t\tlinePosition = currentLine;\r\n\t\t}\r\n\r\n\t\tif(mapping.rest) {\r\n\t\t\tconst next = mapping.rest.indexOf(\",\");\r\n\t\t\tmapping.rest = next === -1 ? \"\" : mapping.rest.substr(next);\r\n\t\t}\r\n\r\n\t\tif(!ignore) {\r\n\t\t\taddSource(line, sources ? sources[sourceIdx] : null, sourcesContent ? sourcesContent[sourceIdx] : null, linePosition)\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\tfunction addCode(generatedCode) {\r\n\t\tif(currentNode && currentNode instanceof CodeNode) {\r\n\t\t\tcurrentNode.addGeneratedCode(generatedCode);\r\n\t\t} else if(currentNode && currentNode instanceof SourceNode && !generatedCode.trim()) {\r\n\t\t\tcurrentNode.addGeneratedCode(generatedCode);\r\n\t\t\tcurrentSourceNodeLine++;\r\n\t\t} else {\r\n\t\t\tcurrentNode = new CodeNode(generatedCode);\r\n\t\t\tnodes.push(currentNode);\r\n\t\t}\r\n\t}\r\n\tfunction addSource(generatedCode, source, originalSource, linePosition) {\r\n\t\tif(currentNode && currentNode instanceof SourceNode &&\r\n\t\t\tcurrentNode.source === source &&\r\n\t\t\tcurrentSourceNodeLine === linePosition\r\n\t\t) {\r\n\t\t\tcurrentNode.addGeneratedCode(generatedCode);\r\n\t\t\tcurrentSourceNodeLine++;\r\n\t\t} else {\r\n\t\t\tcurrentNode = new SourceNode(generatedCode, source, originalSource, linePosition);\r\n\t\t\tcurrentSourceNodeLine = linePosition + 1;\r\n\t\t\tnodes.push(currentNode);\r\n\t\t}\r\n\t}\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/source-list-map/lib/fromStringWithSourceMap.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}}],"sources":{"node_modules/source-list-map/lib/fromStringWithSourceMap.js":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst base64VLQ = require(\"./base64-vlq\");\r\nconst SourceNode = require(\"./SourceNode\");\r\nconst CodeNode = require(\"./CodeNode\");\r\nconst SourceListMap = require(\"./SourceListMap\");\r\n\r\nmodule.exports = function fromStringWithSourceMap(code, map) {\r\n\tconst sources = map.sources;\r\n\tconst sourcesContent = map.sourcesContent;\r\n\tconst mappings = map.mappings.split(\";\");\r\n\tconst lines = code.split(\"\\n\");\r\n\tconst nodes = [];\r\n\tlet currentNode = null;\r\n\tlet currentLine = 1;\r\n\tlet currentSourceIdx = 0;\r\n\tlet currentSourceNodeLine;\r\n\tmappings.forEach(function(mapping, idx) {\r\n\t\tlet line = lines[idx];\r\n\t\tif(typeof line === 'undefined') return;\r\n\t\tif(idx !== lines.length - 1) line += \"\\n\";\r\n\t\tif(!mapping)\r\n\t\t\treturn addCode(line);\r\n\t\tmapping = { value: 0, rest: mapping };\r\n\t\tlet lineAdded = false;\r\n\t\twhile(mapping.rest)\r\n\t\t\tlineAdded = processMapping(mapping, line, lineAdded) || lineAdded;\r\n\t\tif(!lineAdded)\r\n\t\t\taddCode(line);\r\n\t});\r\n\tif(mappings.length < lines.length) {\r\n\t\tlet idx = mappings.length;\r\n\t\twhile(!lines[idx].trim() && idx < lines.length-1) {\r\n\t\t\taddCode(lines[idx] + \"\\n\");\r\n\t\t\tidx++;\r\n\t\t}\r\n\t\taddCode(lines.slice(idx).join(\"\\n\"));\r\n\t}\r\n\treturn new SourceListMap(nodes);\r\n\tfunction processMapping(mapping, line, ignore) {\r\n\t\tif(mapping.rest && mapping.rest[0] !== \",\") {\r\n\t\t\tbase64VLQ.decode(mapping.rest, mapping);\r\n\t\t}\r\n\t\tif(!mapping.rest)\r\n\t\t\treturn false;\r\n\t\tif(mapping.rest[0] === \",\") {\r\n\t\t\tmapping.rest = mapping.rest.substr(1);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tbase64VLQ.decode(mapping.rest, mapping);\r\n\t\tconst sourceIdx = mapping.value + currentSourceIdx;\r\n\t\tcurrentSourceIdx = sourceIdx;\r\n\r\n\t\tlet linePosition;\r\n\t\tif(mapping.rest && mapping.rest[0] !== \",\") {\r\n\t\t\tbase64VLQ.decode(mapping.rest, mapping);\r\n\t\t\tlinePosition = mapping.value + currentLine;\r\n\t\t\tcurrentLine = linePosition;\r\n\t\t} else {\r\n\t\t\tlinePosition = currentLine;\r\n\t\t}\r\n\r\n\t\tif(mapping.rest) {\r\n\t\t\tconst next = mapping.rest.indexOf(\",\");\r\n\t\t\tmapping.rest = next === -1 ? \"\" : mapping.rest.substr(next);\r\n\t\t}\r\n\r\n\t\tif(!ignore) {\r\n\t\t\taddSource(line, sources ? sources[sourceIdx] : null, sourcesContent ? sourcesContent[sourceIdx] : null, linePosition)\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\tfunction addCode(generatedCode) {\r\n\t\tif(currentNode && currentNode instanceof CodeNode) {\r\n\t\t\tcurrentNode.addGeneratedCode(generatedCode);\r\n\t\t} else if(currentNode && currentNode instanceof SourceNode && !generatedCode.trim()) {\r\n\t\t\tcurrentNode.addGeneratedCode(generatedCode);\r\n\t\t\tcurrentSourceNodeLine++;\r\n\t\t} else {\r\n\t\t\tcurrentNode = new CodeNode(generatedCode);\r\n\t\t\tnodes.push(currentNode);\r\n\t\t}\r\n\t}\r\n\tfunction addSource(generatedCode, source, originalSource, linePosition) {\r\n\t\tif(currentNode && currentNode instanceof SourceNode &&\r\n\t\t\tcurrentNode.source === source &&\r\n\t\t\tcurrentSourceNodeLine === linePosition\r\n\t\t) {\r\n\t\t\tcurrentNode.addGeneratedCode(generatedCode);\r\n\t\t\tcurrentSourceNodeLine++;\r\n\t\t} else {\r\n\t\t\tcurrentNode = new SourceNode(generatedCode, source, originalSource, linePosition);\r\n\t\t\tcurrentSourceNodeLine = linePosition + 1;\r\n\t\t\tnodes.push(currentNode);\r\n\t\t}\r\n\t}\r\n};\r\n"},"lineCount":103}},"error":null,"hash":"6302d3e910ed2a4793a85e727893bab6","cacheData":{"env":{}}}