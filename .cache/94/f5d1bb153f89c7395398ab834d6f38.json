{"id":"node_modules/posthtml-svg-mode/lib/renderer.js","dependencies":[{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/package.json","includedInParent":true,"mtime":1592223810651},{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/posthtml-svg-mode/package.json","includedInParent":true,"mtime":1591622454627},{"name":"merge-options","loc":{"line":1,"column":22},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/posthtml-svg-mode/lib/renderer.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/merge-options/index.js"},{"name":"posthtml-render","loc":{"line":2,"column":25},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/posthtml-svg-mode/lib/renderer.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/posthtml-render/lib/index.js"},{"name":"posthtml/lib/api","loc":{"line":3,"column":20},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/posthtml-svg-mode/lib/renderer.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/posthtml/lib/api.js"}],"generated":{"js":"const merge = require('merge-options');\nconst renderer = require('posthtml-render');\nconst api = require('posthtml/lib/api');\n\nconst defaultOptions = {\n  closingSingleTag: 'slash',\n  singleTags: [\n    'circle',\n    'path',\n    'ellipse',\n    'line',\n    'path',\n    'polygon',\n    'polyline',\n    'rect',\n    'use',\n    'animateTransform',\n    'stop'\n  ]\n};\n\n/**\n * @param {PostHTMLTree} tree\n * @param {Object|null} [options] {@see https://github.com/posthtml/posthtml-render#options}\n */\nmodule.exports = function xmlRenderer(tree, options) {\n  const opts = merge(defaultOptions, options || {});\n\n  /**\n   * Workaround for https://github.com/fb55/htmlparser2/issues/187\n   * Also see https://github.com/fb55/htmlparser2/pull/129\n   */\n  opts.singleTags = opts.singleTags.filter((tag) => {\n    let hasContent = false;\n\n    api.match.call(tree, { tag }, (node) => {\n      if (typeof node.content !== 'undefined' && !hasContent) {\n        hasContent = true;\n      }\n      return node;\n    });\n\n    return !hasContent;\n  });\n\n  return renderer(tree, opts);\n};\n\nmodule.exports.defaultOptions = defaultOptions;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/renderer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}}],"sources":{"node_modules/posthtml-svg-mode/lib/renderer.js":"const merge = require('merge-options');\nconst renderer = require('posthtml-render');\nconst api = require('posthtml/lib/api');\n\nconst defaultOptions = {\n  closingSingleTag: 'slash',\n  singleTags: [\n    'circle',\n    'path',\n    'ellipse',\n    'line',\n    'path',\n    'polygon',\n    'polyline',\n    'rect',\n    'use',\n    'animateTransform',\n    'stop'\n  ]\n};\n\n/**\n * @param {PostHTMLTree} tree\n * @param {Object|null} [options] {@see https://github.com/posthtml/posthtml-render#options}\n */\nmodule.exports = function xmlRenderer(tree, options) {\n  const opts = merge(defaultOptions, options || {});\n\n  /**\n   * Workaround for https://github.com/fb55/htmlparser2/issues/187\n   * Also see https://github.com/fb55/htmlparser2/pull/129\n   */\n  opts.singleTags = opts.singleTags.filter((tag) => {\n    let hasContent = false;\n\n    api.match.call(tree, { tag }, (node) => {\n      if (typeof node.content !== 'undefined' && !hasContent) {\n        hasContent = true;\n      }\n      return node;\n    });\n\n    return !hasContent;\n  });\n\n  return renderer(tree, opts);\n};\n\nmodule.exports.defaultOptions = defaultOptions;\n"},"lineCount":50}},"error":null,"hash":"0f73ea2c327991e8e6d0bee16337ff10","cacheData":{"env":{}}}