{"id":"node_modules/cliui/index.js","dependencies":[{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/package.json","includedInParent":true,"mtime":1592223810651},{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/cliui/package.json","includedInParent":true,"mtime":1591609122810},{"name":"string-width","loc":{"line":3,"column":28},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/cliui/index.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/string-width/index.js"},{"name":"strip-ansi","loc":{"line":4,"column":26},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/cliui/index.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/strip-ansi/index.js"},{"name":"wrap-ansi","loc":{"line":5,"column":21},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/cliui/index.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/wrap-ansi/index.js"},{"name":"process","parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/cliui/index.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n'use strict'\n\nconst stringWidth = require('string-width')\nconst stripAnsi = require('strip-ansi')\nconst wrap = require('wrap-ansi')\n\nconst align = {\n  right: alignRight,\n  center: alignCenter\n}\nconst top = 0\nconst right = 1\nconst bottom = 2\nconst left = 3\n\nclass UI {\n  constructor (opts) {\n    this.width = opts.width\n    this.wrap = opts.wrap\n    this.rows = []\n  }\n\n  span (...args) {\n    const cols = this.div(...args)\n    cols.span = true\n  }\n\n  resetOutput () {\n    this.rows = []\n  }\n\n  div (...args) {\n    if (args.length === 0) {\n      this.div('')\n    }\n\n    if (this.wrap && this._shouldApplyLayoutDSL(...args)) {\n      return this._applyLayoutDSL(args[0])\n    }\n\n    const cols = args.map(arg => {\n      if (typeof arg === 'string') {\n        return this._colFromString(arg)\n      }\n\n      return arg\n    })\n\n    this.rows.push(cols)\n    return cols\n  }\n\n  _shouldApplyLayoutDSL (...args) {\n    return args.length === 1 && typeof args[0] === 'string' &&\n      /[\\t\\n]/.test(args[0])\n  }\n\n  _applyLayoutDSL (str) {\n    const rows = str.split('\\n').map(row => row.split('\\t'))\n    let leftColumnWidth = 0\n\n    // simple heuristic for layout, make sure the\n    // second column lines up along the left-hand.\n    // don't allow the first column to take up more\n    // than 50% of the screen.\n    rows.forEach(columns => {\n      if (columns.length > 1 && stringWidth(columns[0]) > leftColumnWidth) {\n        leftColumnWidth = Math.min(\n          Math.floor(this.width * 0.5),\n          stringWidth(columns[0])\n        )\n      }\n    })\n\n    // generate a table:\n    //  replacing ' ' with padding calculations.\n    //  using the algorithmically generated width.\n    rows.forEach(columns => {\n      this.div(...columns.map((r, i) => {\n        return {\n          text: r.trim(),\n          padding: this._measurePadding(r),\n          width: (i === 0 && columns.length > 1) ? leftColumnWidth : undefined\n        }\n      }))\n    })\n\n    return this.rows[this.rows.length - 1]\n  }\n\n  _colFromString (text) {\n    return {\n      text,\n      padding: this._measurePadding(text)\n    }\n  }\n\n  _measurePadding (str) {\n    // measure padding without ansi escape codes\n    const noAnsi = stripAnsi(str)\n    return [0, noAnsi.match(/\\s*$/)[0].length, 0, noAnsi.match(/^\\s*/)[0].length]\n  }\n\n  toString () {\n    const lines = []\n\n    this.rows.forEach(row => {\n      this.rowToString(row, lines)\n    })\n\n    // don't display any lines with the\n    // hidden flag set.\n    return lines\n      .filter(line => !line.hidden)\n      .map(line => line.text)\n      .join('\\n')\n  }\n\n  rowToString (row, lines) {\n    this._rasterize(row).forEach((rrow, r) => {\n      let str = ''\n      rrow.forEach((col, c) => {\n        const { width } = row[c] // the width with padding.\n        const wrapWidth = this._negatePadding(row[c]) // the width without padding.\n\n        let ts = col // temporary string used during alignment/padding.\n\n        if (wrapWidth > stringWidth(col)) {\n          ts += ' '.repeat(wrapWidth - stringWidth(col))\n        }\n\n        // align the string within its column.\n        if (row[c].align && row[c].align !== 'left' && this.wrap) {\n          ts = align[row[c].align](ts, wrapWidth)\n          if (stringWidth(ts) < wrapWidth) {\n            ts += ' '.repeat(width - stringWidth(ts) - 1)\n          }\n        }\n\n        // apply border and padding to string.\n        const padding = row[c].padding || [0, 0, 0, 0]\n        if (padding[left]) {\n          str += ' '.repeat(padding[left])\n        }\n\n        str += addBorder(row[c], ts, '| ')\n        str += ts\n        str += addBorder(row[c], ts, ' |')\n        if (padding[right]) {\n          str += ' '.repeat(padding[right])\n        }\n\n        // if prior row is span, try to render the\n        // current row on the prior line.\n        if (r === 0 && lines.length > 0) {\n          str = this._renderInline(str, lines[lines.length - 1])\n        }\n      })\n\n      // remove trailing whitespace.\n      lines.push({\n        text: str.replace(/ +$/, ''),\n        span: row.span\n      })\n    })\n\n    return lines\n  }\n\n  // if the full 'source' can render in\n  // the target line, do so.\n  _renderInline (source, previousLine) {\n    const leadingWhitespace = source.match(/^ */)[0].length\n    const target = previousLine.text\n    const targetTextWidth = stringWidth(target.trimRight())\n\n    if (!previousLine.span) {\n      return source\n    }\n\n    // if we're not applying wrapping logic,\n    // just always append to the span.\n    if (!this.wrap) {\n      previousLine.hidden = true\n      return target + source\n    }\n\n    if (leadingWhitespace < targetTextWidth) {\n      return source\n    }\n\n    previousLine.hidden = true\n\n    return target.trimRight() + ' '.repeat(leadingWhitespace - targetTextWidth) + source.trimLeft()\n  }\n\n  _rasterize (row) {\n    const rrows = []\n    const widths = this._columnWidths(row)\n    let wrapped\n\n    // word wrap all columns, and create\n    // a data-structure that is easy to rasterize.\n    row.forEach((col, c) => {\n      // leave room for left and right padding.\n      col.width = widths[c]\n      if (this.wrap) {\n        wrapped = wrap(col.text, this._negatePadding(col), { hard: true }).split('\\n')\n      } else {\n        wrapped = col.text.split('\\n')\n      }\n\n      if (col.border) {\n        wrapped.unshift('.' + '-'.repeat(this._negatePadding(col) + 2) + '.')\n        wrapped.push(\"'\" + '-'.repeat(this._negatePadding(col) + 2) + \"'\")\n      }\n\n      // add top and bottom padding.\n      if (col.padding) {\n        wrapped.unshift(...new Array(col.padding[top] || 0).fill(''))\n        wrapped.push(...new Array(col.padding[bottom] || 0).fill(''))\n      }\n\n      wrapped.forEach((str, r) => {\n        if (!rrows[r]) {\n          rrows.push([])\n        }\n\n        const rrow = rrows[r]\n\n        for (let i = 0; i < c; i++) {\n          if (rrow[i] === undefined) {\n            rrow.push('')\n          }\n        }\n\n        rrow.push(str)\n      })\n    })\n\n    return rrows\n  }\n\n  _negatePadding (col) {\n    let wrapWidth = col.width\n    if (col.padding) {\n      wrapWidth -= (col.padding[left] || 0) + (col.padding[right] || 0)\n    }\n\n    if (col.border) {\n      wrapWidth -= 4\n    }\n\n    return wrapWidth\n  }\n\n  _columnWidths (row) {\n    if (!this.wrap) {\n      return row.map(col => {\n        return col.width || stringWidth(col.text)\n      })\n    }\n\n    let unset = row.length\n    let remainingWidth = this.width\n\n    // column widths can be set in config.\n    const widths = row.map(col => {\n      if (col.width) {\n        unset--\n        remainingWidth -= col.width\n        return col.width\n      }\n\n      return undefined\n    })\n\n    // any unset widths should be calculated.\n    const unsetWidth = unset ? Math.floor(remainingWidth / unset) : 0\n\n    return widths.map((w, i) => {\n      if (w === undefined) {\n        return Math.max(unsetWidth, _minWidth(row[i]))\n      }\n\n      return w\n    })\n  }\n}\n\nfunction addBorder (col, ts, style) {\n  if (col.border) {\n    if (/[.']-+[.']/.test(ts)) {\n      return ''\n    }\n\n    if (ts.trim().length !== 0) {\n      return style\n    }\n\n    return '  '\n  }\n\n  return ''\n}\n\n// calculates the minimum width of\n// a column, based on padding preferences.\nfunction _minWidth (col) {\n  const padding = col.padding || []\n  const minWidth = 1 + (padding[left] || 0) + (padding[right] || 0)\n  if (col.border) {\n    return minWidth + 4\n  }\n\n  return minWidth\n}\n\nfunction getWindowWidth () {\n  /* istanbul ignore next: depends on terminal */\n  if (typeof process === 'object' && process.stdout && process.stdout.columns) {\n    return process.stdout.columns\n  }\n}\n\nfunction alignRight (str, width) {\n  str = str.trim()\n  const strWidth = stringWidth(str)\n\n  if (strWidth < width) {\n    return ' '.repeat(width - strWidth) + str\n  }\n\n  return str\n}\n\nfunction alignCenter (str, width) {\n  str = str.trim()\n  const strWidth = stringWidth(str)\n\n  /* istanbul ignore next */\n  if (strWidth >= width) {\n    return str\n  }\n\n  return ' '.repeat((width - strWidth) >> 1) + str\n}\n\nmodule.exports = function (opts = {}) {\n  return new UI({\n    width: opts.width || getWindowWidth() || /* istanbul ignore next */ 80,\n    wrap: opts.wrap !== false\n  })\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/cliui/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}}],"sources":{"node_modules/cliui/index.js":"'use strict'\n\nconst stringWidth = require('string-width')\nconst stripAnsi = require('strip-ansi')\nconst wrap = require('wrap-ansi')\n\nconst align = {\n  right: alignRight,\n  center: alignCenter\n}\nconst top = 0\nconst right = 1\nconst bottom = 2\nconst left = 3\n\nclass UI {\n  constructor (opts) {\n    this.width = opts.width\n    this.wrap = opts.wrap\n    this.rows = []\n  }\n\n  span (...args) {\n    const cols = this.div(...args)\n    cols.span = true\n  }\n\n  resetOutput () {\n    this.rows = []\n  }\n\n  div (...args) {\n    if (args.length === 0) {\n      this.div('')\n    }\n\n    if (this.wrap && this._shouldApplyLayoutDSL(...args)) {\n      return this._applyLayoutDSL(args[0])\n    }\n\n    const cols = args.map(arg => {\n      if (typeof arg === 'string') {\n        return this._colFromString(arg)\n      }\n\n      return arg\n    })\n\n    this.rows.push(cols)\n    return cols\n  }\n\n  _shouldApplyLayoutDSL (...args) {\n    return args.length === 1 && typeof args[0] === 'string' &&\n      /[\\t\\n]/.test(args[0])\n  }\n\n  _applyLayoutDSL (str) {\n    const rows = str.split('\\n').map(row => row.split('\\t'))\n    let leftColumnWidth = 0\n\n    // simple heuristic for layout, make sure the\n    // second column lines up along the left-hand.\n    // don't allow the first column to take up more\n    // than 50% of the screen.\n    rows.forEach(columns => {\n      if (columns.length > 1 && stringWidth(columns[0]) > leftColumnWidth) {\n        leftColumnWidth = Math.min(\n          Math.floor(this.width * 0.5),\n          stringWidth(columns[0])\n        )\n      }\n    })\n\n    // generate a table:\n    //  replacing ' ' with padding calculations.\n    //  using the algorithmically generated width.\n    rows.forEach(columns => {\n      this.div(...columns.map((r, i) => {\n        return {\n          text: r.trim(),\n          padding: this._measurePadding(r),\n          width: (i === 0 && columns.length > 1) ? leftColumnWidth : undefined\n        }\n      }))\n    })\n\n    return this.rows[this.rows.length - 1]\n  }\n\n  _colFromString (text) {\n    return {\n      text,\n      padding: this._measurePadding(text)\n    }\n  }\n\n  _measurePadding (str) {\n    // measure padding without ansi escape codes\n    const noAnsi = stripAnsi(str)\n    return [0, noAnsi.match(/\\s*$/)[0].length, 0, noAnsi.match(/^\\s*/)[0].length]\n  }\n\n  toString () {\n    const lines = []\n\n    this.rows.forEach(row => {\n      this.rowToString(row, lines)\n    })\n\n    // don't display any lines with the\n    // hidden flag set.\n    return lines\n      .filter(line => !line.hidden)\n      .map(line => line.text)\n      .join('\\n')\n  }\n\n  rowToString (row, lines) {\n    this._rasterize(row).forEach((rrow, r) => {\n      let str = ''\n      rrow.forEach((col, c) => {\n        const { width } = row[c] // the width with padding.\n        const wrapWidth = this._negatePadding(row[c]) // the width without padding.\n\n        let ts = col // temporary string used during alignment/padding.\n\n        if (wrapWidth > stringWidth(col)) {\n          ts += ' '.repeat(wrapWidth - stringWidth(col))\n        }\n\n        // align the string within its column.\n        if (row[c].align && row[c].align !== 'left' && this.wrap) {\n          ts = align[row[c].align](ts, wrapWidth)\n          if (stringWidth(ts) < wrapWidth) {\n            ts += ' '.repeat(width - stringWidth(ts) - 1)\n          }\n        }\n\n        // apply border and padding to string.\n        const padding = row[c].padding || [0, 0, 0, 0]\n        if (padding[left]) {\n          str += ' '.repeat(padding[left])\n        }\n\n        str += addBorder(row[c], ts, '| ')\n        str += ts\n        str += addBorder(row[c], ts, ' |')\n        if (padding[right]) {\n          str += ' '.repeat(padding[right])\n        }\n\n        // if prior row is span, try to render the\n        // current row on the prior line.\n        if (r === 0 && lines.length > 0) {\n          str = this._renderInline(str, lines[lines.length - 1])\n        }\n      })\n\n      // remove trailing whitespace.\n      lines.push({\n        text: str.replace(/ +$/, ''),\n        span: row.span\n      })\n    })\n\n    return lines\n  }\n\n  // if the full 'source' can render in\n  // the target line, do so.\n  _renderInline (source, previousLine) {\n    const leadingWhitespace = source.match(/^ */)[0].length\n    const target = previousLine.text\n    const targetTextWidth = stringWidth(target.trimRight())\n\n    if (!previousLine.span) {\n      return source\n    }\n\n    // if we're not applying wrapping logic,\n    // just always append to the span.\n    if (!this.wrap) {\n      previousLine.hidden = true\n      return target + source\n    }\n\n    if (leadingWhitespace < targetTextWidth) {\n      return source\n    }\n\n    previousLine.hidden = true\n\n    return target.trimRight() + ' '.repeat(leadingWhitespace - targetTextWidth) + source.trimLeft()\n  }\n\n  _rasterize (row) {\n    const rrows = []\n    const widths = this._columnWidths(row)\n    let wrapped\n\n    // word wrap all columns, and create\n    // a data-structure that is easy to rasterize.\n    row.forEach((col, c) => {\n      // leave room for left and right padding.\n      col.width = widths[c]\n      if (this.wrap) {\n        wrapped = wrap(col.text, this._negatePadding(col), { hard: true }).split('\\n')\n      } else {\n        wrapped = col.text.split('\\n')\n      }\n\n      if (col.border) {\n        wrapped.unshift('.' + '-'.repeat(this._negatePadding(col) + 2) + '.')\n        wrapped.push(\"'\" + '-'.repeat(this._negatePadding(col) + 2) + \"'\")\n      }\n\n      // add top and bottom padding.\n      if (col.padding) {\n        wrapped.unshift(...new Array(col.padding[top] || 0).fill(''))\n        wrapped.push(...new Array(col.padding[bottom] || 0).fill(''))\n      }\n\n      wrapped.forEach((str, r) => {\n        if (!rrows[r]) {\n          rrows.push([])\n        }\n\n        const rrow = rrows[r]\n\n        for (let i = 0; i < c; i++) {\n          if (rrow[i] === undefined) {\n            rrow.push('')\n          }\n        }\n\n        rrow.push(str)\n      })\n    })\n\n    return rrows\n  }\n\n  _negatePadding (col) {\n    let wrapWidth = col.width\n    if (col.padding) {\n      wrapWidth -= (col.padding[left] || 0) + (col.padding[right] || 0)\n    }\n\n    if (col.border) {\n      wrapWidth -= 4\n    }\n\n    return wrapWidth\n  }\n\n  _columnWidths (row) {\n    if (!this.wrap) {\n      return row.map(col => {\n        return col.width || stringWidth(col.text)\n      })\n    }\n\n    let unset = row.length\n    let remainingWidth = this.width\n\n    // column widths can be set in config.\n    const widths = row.map(col => {\n      if (col.width) {\n        unset--\n        remainingWidth -= col.width\n        return col.width\n      }\n\n      return undefined\n    })\n\n    // any unset widths should be calculated.\n    const unsetWidth = unset ? Math.floor(remainingWidth / unset) : 0\n\n    return widths.map((w, i) => {\n      if (w === undefined) {\n        return Math.max(unsetWidth, _minWidth(row[i]))\n      }\n\n      return w\n    })\n  }\n}\n\nfunction addBorder (col, ts, style) {\n  if (col.border) {\n    if (/[.']-+[.']/.test(ts)) {\n      return ''\n    }\n\n    if (ts.trim().length !== 0) {\n      return style\n    }\n\n    return '  '\n  }\n\n  return ''\n}\n\n// calculates the minimum width of\n// a column, based on padding preferences.\nfunction _minWidth (col) {\n  const padding = col.padding || []\n  const minWidth = 1 + (padding[left] || 0) + (padding[right] || 0)\n  if (col.border) {\n    return minWidth + 4\n  }\n\n  return minWidth\n}\n\nfunction getWindowWidth () {\n  /* istanbul ignore next: depends on terminal */\n  if (typeof process === 'object' && process.stdout && process.stdout.columns) {\n    return process.stdout.columns\n  }\n}\n\nfunction alignRight (str, width) {\n  str = str.trim()\n  const strWidth = stringWidth(str)\n\n  if (strWidth < width) {\n    return ' '.repeat(width - strWidth) + str\n  }\n\n  return str\n}\n\nfunction alignCenter (str, width) {\n  str = str.trim()\n  const strWidth = stringWidth(str)\n\n  /* istanbul ignore next */\n  if (strWidth >= width) {\n    return str\n  }\n\n  return ' '.repeat((width - strWidth) >> 1) + str\n}\n\nmodule.exports = function (opts = {}) {\n  return new UI({\n    width: opts.width || getWindowWidth() || /* istanbul ignore next */ 80,\n    wrap: opts.wrap !== false\n  })\n}\n"},"lineCount":356}},"error":null,"hash":"53fd2305f070cc877013a208d2fb7c50","cacheData":{"env":{}}}