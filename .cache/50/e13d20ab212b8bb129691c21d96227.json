{"id":"node_modules/bfj/src/write.js","dependencies":[{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/package.json","includedInParent":true,"mtime":1592223810651},{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bfj/package.json","includedInParent":true,"mtime":1591602462221},{"name":"fs","loc":{"line":3,"column":19},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bfj/src/write.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"./promise","loc":{"line":4,"column":24},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bfj/src/write.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bfj/src/promise.js"},{"name":"./streamify","loc":{"line":5,"column":26},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bfj/src/write.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bfj/src/streamify.js"}],"generated":{"js":"'use strict';\n\nvar fs = require('fs');\n\nvar promise = require('./promise');\n\nvar streamify = require('./streamify');\n\nmodule.exports = write;\n/**\n * Public function `write`.\n *\n * Returns a promise and asynchronously serialises a data structure to a\n * JSON file on disk. Sanely handles promises, buffers, maps and other\n * iterables.\n *\n * @param path:           Path to the JSON file.\n *\n * @param data:           The data to transform.\n *\n * @option space:         Indentation string, or the number of spaces\n *                        to indent each nested level by.\n *\n * @option promises:      'resolve' or 'ignore', default is 'resolve'.\n *\n * @option buffers:       'toString' or 'ignore', default is 'toString'.\n *\n * @option maps:          'object' or 'ignore', default is 'object'.\n *\n * @option iterables:     'array' or 'ignore', default is 'array'.\n *\n * @option circular:      'error' or 'ignore', default is 'error'.\n *\n * @option yieldRate:     The number of data items to process per timeslice,\n *                        default is 16384.\n *\n * @option bufferLength:  The length of the buffer, default is 1024.\n *\n * @option highWaterMark: If set, will be passed to the readable stream constructor\n *                        as the value for the highWaterMark option.\n *\n * @option Promise:       The promise constructor to use, defaults to bluebird.\n **/\n\nfunction write(path, data, options) {\n  var Promise = promise(options);\n  return new Promise(function (resolve, reject) {\n    streamify(data, options).pipe(fs.createWriteStream(path, options)).on('finish', function () {\n      resolve();\n    }).on('error', reject).on('dataError', reject);\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"node_modules/bfj/src/write.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"node_modules/bfj/src/write.js","original":{"line":3,"column":0}},{"name":"fs","generated":{"line":3,"column":4},"source":"node_modules/bfj/src/write.js","original":{"line":3,"column":6}},{"generated":{"line":3,"column":6},"source":"node_modules/bfj/src/write.js","original":{"line":3,"column":8}},{"name":"require","generated":{"line":3,"column":9},"source":"node_modules/bfj/src/write.js","original":{"line":3,"column":11}},{"generated":{"line":3,"column":16},"source":"node_modules/bfj/src/write.js","original":{"line":3,"column":18}},{"generated":{"line":3,"column":17},"source":"node_modules/bfj/src/write.js","original":{"line":3,"column":19}},{"generated":{"line":3,"column":21},"source":"node_modules/bfj/src/write.js","original":{"line":3,"column":18}},{"generated":{"line":3,"column":22},"source":"node_modules/bfj/src/write.js","original":{"line":3,"column":0}},{"generated":{"line":5,"column":0},"source":"node_modules/bfj/src/write.js","original":{"line":4,"column":0}},{"name":"promise","generated":{"line":5,"column":4},"source":"node_modules/bfj/src/write.js","original":{"line":4,"column":6}},{"generated":{"line":5,"column":11},"source":"node_modules/bfj/src/write.js","original":{"line":4,"column":13}},{"name":"require","generated":{"line":5,"column":14},"source":"node_modules/bfj/src/write.js","original":{"line":4,"column":16}},{"generated":{"line":5,"column":21},"source":"node_modules/bfj/src/write.js","original":{"line":4,"column":23}},{"generated":{"line":5,"column":22},"source":"node_modules/bfj/src/write.js","original":{"line":4,"column":24}},{"generated":{"line":5,"column":33},"source":"node_modules/bfj/src/write.js","original":{"line":4,"column":23}},{"generated":{"line":5,"column":34},"source":"node_modules/bfj/src/write.js","original":{"line":4,"column":0}},{"generated":{"line":7,"column":0},"source":"node_modules/bfj/src/write.js","original":{"line":5,"column":0}},{"name":"streamify","generated":{"line":7,"column":4},"source":"node_modules/bfj/src/write.js","original":{"line":5,"column":6}},{"generated":{"line":7,"column":13},"source":"node_modules/bfj/src/write.js","original":{"line":5,"column":15}},{"name":"require","generated":{"line":7,"column":16},"source":"node_modules/bfj/src/write.js","original":{"line":5,"column":18}},{"generated":{"line":7,"column":23},"source":"node_modules/bfj/src/write.js","original":{"line":5,"column":25}},{"generated":{"line":7,"column":24},"source":"node_modules/bfj/src/write.js","original":{"line":5,"column":26}},{"generated":{"line":7,"column":37},"source":"node_modules/bfj/src/write.js","original":{"line":5,"column":25}},{"generated":{"line":7,"column":38},"source":"node_modules/bfj/src/write.js","original":{"line":5,"column":0}},{"name":"module","generated":{"line":9,"column":0},"source":"node_modules/bfj/src/write.js","original":{"line":7,"column":0}},{"generated":{"line":9,"column":6},"source":"node_modules/bfj/src/write.js","original":{"line":7,"column":6}},{"name":"exports","generated":{"line":9,"column":7},"source":"node_modules/bfj/src/write.js","original":{"line":7,"column":7}},{"generated":{"line":9,"column":14},"source":"node_modules/bfj/src/write.js","original":{"line":7,"column":0}},{"name":"write","generated":{"line":9,"column":17},"source":"node_modules/bfj/src/write.js","original":{"line":7,"column":17}},{"generated":{"line":9,"column":22},"source":"node_modules/bfj/src/write.js","original":{"line":7,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/bfj/src/write.js","original":{"line":9,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/bfj/src/write.js","original":{"line":43,"column":0}},{"name":"write","generated":{"line":45,"column":9},"source":"node_modules/bfj/src/write.js","original":{"line":43,"column":9}},{"generated":{"line":45,"column":14},"source":"node_modules/bfj/src/write.js","original":{"line":43,"column":0}},{"name":"path","generated":{"line":45,"column":15},"source":"node_modules/bfj/src/write.js","original":{"line":43,"column":16}},{"generated":{"line":45,"column":19},"source":"node_modules/bfj/src/write.js","original":{"line":43,"column":0}},{"name":"data","generated":{"line":45,"column":21},"source":"node_modules/bfj/src/write.js","original":{"line":43,"column":22}},{"generated":{"line":45,"column":25},"source":"node_modules/bfj/src/write.js","original":{"line":43,"column":0}},{"name":"options","generated":{"line":45,"column":27},"source":"node_modules/bfj/src/write.js","original":{"line":43,"column":28}},{"generated":{"line":45,"column":34},"source":"node_modules/bfj/src/write.js","original":{"line":43,"column":0}},{"generated":{"line":45,"column":36},"source":"node_modules/bfj/src/write.js","original":{"line":43,"column":37}},{"generated":{"line":46,"column":0},"source":"node_modules/bfj/src/write.js","original":{"line":44,"column":2}},{"name":"Promise","generated":{"line":46,"column":6},"source":"node_modules/bfj/src/write.js","original":{"line":44,"column":8}},{"generated":{"line":46,"column":13},"source":"node_modules/bfj/src/write.js","original":{"line":44,"column":15}},{"name":"promise","generated":{"line":46,"column":16},"source":"node_modules/bfj/src/write.js","original":{"line":44,"column":18}},{"generated":{"line":46,"column":23},"source":"node_modules/bfj/src/write.js","original":{"line":44,"column":25}},{"name":"options","generated":{"line":46,"column":24},"source":"node_modules/bfj/src/write.js","original":{"line":44,"column":26}},{"generated":{"line":46,"column":31},"source":"node_modules/bfj/src/write.js","original":{"line":44,"column":25}},{"generated":{"line":46,"column":32},"source":"node_modules/bfj/src/write.js","original":{"line":44,"column":2}},{"generated":{"line":47,"column":0},"source":"node_modules/bfj/src/write.js","original":{"line":46,"column":2}},{"generated":{"line":47,"column":9},"source":"node_modules/bfj/src/write.js","original":{"line":46,"column":9}},{"name":"Promise","generated":{"line":47,"column":13},"source":"node_modules/bfj/src/write.js","original":{"line":46,"column":13}},{"generated":{"line":47,"column":20},"source":"node_modules/bfj/src/write.js","original":{"line":46,"column":9}},{"generated":{"line":47,"column":21},"source":"node_modules/bfj/src/write.js","original":{"line":46,"column":21}},{"name":"resolve","generated":{"line":47,"column":31},"source":"node_modules/bfj/src/write.js","original":{"line":46,"column":22}},{"generated":{"line":47,"column":38},"source":"node_modules/bfj/src/write.js","original":{"line":46,"column":21}},{"name":"reject","generated":{"line":47,"column":40},"source":"node_modules/bfj/src/write.js","original":{"line":46,"column":31}},{"generated":{"line":47,"column":46},"source":"node_modules/bfj/src/write.js","original":{"line":46,"column":21}},{"generated":{"line":47,"column":48},"source":"node_modules/bfj/src/write.js","original":{"line":46,"column":42}},{"name":"streamify","generated":{"line":48,"column":0},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":4}},{"name":"streamify","generated":{"line":48,"column":4},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":4}},{"generated":{"line":48,"column":13},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":13}},{"name":"data","generated":{"line":48,"column":14},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":14}},{"generated":{"line":48,"column":18},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":13}},{"name":"options","generated":{"line":48,"column":20},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":20}},{"generated":{"line":48,"column":27},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":13}},{"generated":{"line":48,"column":28},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":4}},{"name":"pipe","generated":{"line":48,"column":29},"source":"node_modules/bfj/src/write.js","original":{"line":48,"column":7}},{"generated":{"line":48,"column":33},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":4}},{"name":"fs","generated":{"line":48,"column":34},"source":"node_modules/bfj/src/write.js","original":{"line":48,"column":12}},{"generated":{"line":48,"column":36},"source":"node_modules/bfj/src/write.js","original":{"line":48,"column":14}},{"name":"createWriteStream","generated":{"line":48,"column":37},"source":"node_modules/bfj/src/write.js","original":{"line":48,"column":15}},{"generated":{"line":48,"column":54},"source":"node_modules/bfj/src/write.js","original":{"line":48,"column":12}},{"name":"path","generated":{"line":48,"column":55},"source":"node_modules/bfj/src/write.js","original":{"line":48,"column":33}},{"generated":{"line":48,"column":59},"source":"node_modules/bfj/src/write.js","original":{"line":48,"column":12}},{"name":"options","generated":{"line":48,"column":61},"source":"node_modules/bfj/src/write.js","original":{"line":48,"column":39}},{"generated":{"line":48,"column":68},"source":"node_modules/bfj/src/write.js","original":{"line":48,"column":12}},{"generated":{"line":48,"column":69},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":4}},{"name":"on","generated":{"line":48,"column":71},"source":"node_modules/bfj/src/write.js","original":{"line":49,"column":7}},{"generated":{"line":48,"column":73},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":4}},{"generated":{"line":48,"column":74},"source":"node_modules/bfj/src/write.js","original":{"line":49,"column":10}},{"generated":{"line":48,"column":82},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":4}},{"generated":{"line":48,"column":84},"source":"node_modules/bfj/src/write.js","original":{"line":49,"column":20}},{"generated":{"line":48,"column":96},"source":"node_modules/bfj/src/write.js","original":{"line":49,"column":26}},{"name":"resolve","generated":{"line":49,"column":0},"source":"node_modules/bfj/src/write.js","original":{"line":50,"column":8}},{"name":"resolve","generated":{"line":49,"column":6},"source":"node_modules/bfj/src/write.js","original":{"line":50,"column":8}},{"generated":{"line":49,"column":13},"source":"node_modules/bfj/src/write.js","original":{"line":50,"column":15}},{"generated":{"line":50,"column":0},"source":"node_modules/bfj/src/write.js","original":{"line":51,"column":7}},{"generated":{"line":50,"column":5},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":4}},{"name":"on","generated":{"line":50,"column":7},"source":"node_modules/bfj/src/write.js","original":{"line":52,"column":7}},{"generated":{"line":50,"column":9},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":4}},{"generated":{"line":50,"column":10},"source":"node_modules/bfj/src/write.js","original":{"line":52,"column":10}},{"generated":{"line":50,"column":17},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":4}},{"name":"reject","generated":{"line":50,"column":19},"source":"node_modules/bfj/src/write.js","original":{"line":52,"column":19}},{"generated":{"line":50,"column":25},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":4}},{"name":"on","generated":{"line":50,"column":27},"source":"node_modules/bfj/src/write.js","original":{"line":53,"column":7}},{"generated":{"line":50,"column":29},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":4}},{"generated":{"line":50,"column":30},"source":"node_modules/bfj/src/write.js","original":{"line":53,"column":10}},{"generated":{"line":50,"column":41},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":4}},{"name":"reject","generated":{"line":50,"column":43},"source":"node_modules/bfj/src/write.js","original":{"line":53,"column":23}},{"generated":{"line":50,"column":49},"source":"node_modules/bfj/src/write.js","original":{"line":47,"column":4}},{"generated":{"line":51,"column":0},"source":"node_modules/bfj/src/write.js","original":{"line":54,"column":3}},{"generated":{"line":51,"column":3},"source":"node_modules/bfj/src/write.js","original":{"line":46,"column":9}},{"generated":{"line":51,"column":4},"source":"node_modules/bfj/src/write.js","original":{"line":46,"column":2}},{"generated":{"line":52,"column":0},"source":"node_modules/bfj/src/write.js","original":{"line":55,"column":1}}],"sources":{"node_modules/bfj/src/write.js":"'use strict'\n\nconst fs = require('fs')\nconst promise = require('./promise')\nconst streamify = require('./streamify')\n\nmodule.exports = write\n\n/**\n * Public function `write`.\n *\n * Returns a promise and asynchronously serialises a data structure to a\n * JSON file on disk. Sanely handles promises, buffers, maps and other\n * iterables.\n *\n * @param path:           Path to the JSON file.\n *\n * @param data:           The data to transform.\n *\n * @option space:         Indentation string, or the number of spaces\n *                        to indent each nested level by.\n *\n * @option promises:      'resolve' or 'ignore', default is 'resolve'.\n *\n * @option buffers:       'toString' or 'ignore', default is 'toString'.\n *\n * @option maps:          'object' or 'ignore', default is 'object'.\n *\n * @option iterables:     'array' or 'ignore', default is 'array'.\n *\n * @option circular:      'error' or 'ignore', default is 'error'.\n *\n * @option yieldRate:     The number of data items to process per timeslice,\n *                        default is 16384.\n *\n * @option bufferLength:  The length of the buffer, default is 1024.\n *\n * @option highWaterMark: If set, will be passed to the readable stream constructor\n *                        as the value for the highWaterMark option.\n *\n * @option Promise:       The promise constructor to use, defaults to bluebird.\n **/\nfunction write (path, data, options) {\n  const Promise = promise(options)\n\n  return new Promise((resolve, reject) => {\n    streamify(data, options)\n      .pipe(fs.createWriteStream(path, options))\n      .on('finish', () => {\n        resolve()\n      })\n      .on('error', reject)\n      .on('dataError', reject)\n  })\n}\n"},"lineCount":null}},"error":null,"hash":"fac8c4c3c3d59f243e96b4e16e11c911","cacheData":{"env":{}}}