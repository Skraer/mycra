{"id":"node_modules/svg-baker/node_modules/postcss/lib/declaration.js","dependencies":[{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/package.json","includedInParent":true,"mtime":1592223810651},{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/svg-baker/node_modules/postcss/package.json","includedInParent":true,"mtime":1591622454630},{"name":"./warn-once","loc":{"line":7,"column":24},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/svg-baker/node_modules/postcss/lib/declaration.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/svg-baker/node_modules/postcss/lib/warn-once.js"},{"name":"./node","loc":{"line":11,"column":20},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/svg-baker/node_modules/postcss/lib/declaration.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/svg-baker/node_modules/postcss/lib/node.js"}],"generated":{"js":"'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function (obj) { return typeof obj; }; } else { _typeof = function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nexports.__esModule = true;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _warnOnce = require('./warn-once');\n\nvar _warnOnce2 = _interopRequireDefault(_warnOnce);\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (_typeof(call) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + _typeof(superClass));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * Represents a CSS declaration.\n *\n * @extends Node\n *\n * @example\n * const root = postcss.parse('a { color: black }');\n * const decl = root.first.first;\n * decl.type       //=> 'decl'\n * decl.toString() //=> ' color: black'\n */\n\n\nvar Declaration = function (_Node) {\n  _inherits(Declaration, _Node);\n\n  function Declaration(defaults) {\n    _classCallCheck(this, Declaration);\n\n    var _this = _possibleConstructorReturn(this, _Node.call(this, defaults));\n\n    _this.type = 'decl';\n    return _this;\n  }\n\n  _createClass(Declaration, [{\n    key: '_value',\n    get: function get() {\n      (0, _warnOnce2.default)('Node#_value was deprecated. Use Node#raws.value');\n      return this.raws.value;\n    },\n    set: function set(val) {\n      (0, _warnOnce2.default)('Node#_value was deprecated. Use Node#raws.value');\n      this.raws.value = val;\n    }\n  }, {\n    key: '_important',\n    get: function get() {\n      (0, _warnOnce2.default)('Node#_important was deprecated. Use Node#raws.important');\n      return this.raws.important;\n    },\n    set: function set(val) {\n      (0, _warnOnce2.default)('Node#_important was deprecated. Use Node#raws.important');\n      this.raws.important = val;\n    }\n    /**\n     * @memberof Declaration#\n     * @member {string} prop - the declaration’s property name\n     *\n     * @example\n     * const root = postcss.parse('a { color: black }');\n     * const decl = root.first.first;\n     * decl.prop //=> 'color'\n     */\n\n    /**\n     * @memberof Declaration#\n     * @member {string} value - the declaration’s value\n     *\n     * @example\n     * const root = postcss.parse('a { color: black }');\n     * const decl = root.first.first;\n     * decl.value //=> 'black'\n     */\n\n    /**\n     * @memberof Declaration#\n     * @member {boolean} important - `true` if the declaration\n     *                               has an !important annotation.\n     *\n     * @example\n     * const root = postcss.parse('a { color: black !important; color: red }');\n     * root.first.first.important //=> true\n     * root.first.last.important  //=> undefined\n     */\n\n    /**\n     * @memberof Declaration#\n     * @member {object} raws - Information to generate byte-to-byte equal\n     *                         node string as it was in the origin input.\n     *\n     * Every parser saves its own properties,\n     * but the default CSS parser uses:\n     *\n     * * `before`: the space symbols before the node. It also stores `*`\n     *   and `_` symbols before the declaration (IE hack).\n     * * `between`: the symbols between the property and value\n     *   for declarations.\n     * * `important`: the content of the important statement,\n     *   if it is not just `!important`.\n     *\n     * PostCSS cleans declaration from comments and extra spaces,\n     * but it stores origin content in raws properties.\n     * As such, if you don’t change a declaration’s value,\n     * PostCSS will use the raw value with comments.\n     *\n     * @example\n     * const root = postcss.parse('a {\\n  color:black\\n}')\n     * root.first.first.raws //=> { before: '\\n  ', between: ':' }\n     */\n\n  }]);\n\n  return Declaration;\n}(_node2.default);\n\nexports.default = Declaration;\nmodule.exports = exports['default'];"},"sourceMaps":{"js":{"mappings":[{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":25,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":25,"column":4}},{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":25,"column":13}},{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":25,"column":16}},{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":25,"column":23}},{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":25,"column":24}},{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":25,"column":37}},{"source":"declaration.es6","name":null,"original":{"line":1,"column":0},"generated":{"line":25,"column":38}},{"source":"declaration.es6","name":null,"original":{"line":2,"column":0},"generated":{"line":29,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":2,"column":0},"generated":{"line":29,"column":4}},{"source":"declaration.es6","name":null,"original":{"line":2,"column":0},"generated":{"line":29,"column":9}},{"source":"declaration.es6","name":null,"original":{"line":2,"column":0},"generated":{"line":29,"column":12}},{"source":"declaration.es6","name":null,"original":{"line":2,"column":0},"generated":{"line":29,"column":19}},{"source":"declaration.es6","name":null,"original":{"line":2,"column":0},"generated":{"line":29,"column":20}},{"source":"declaration.es6","name":null,"original":{"line":2,"column":0},"generated":{"line":29,"column":28}},{"source":"declaration.es6","name":null,"original":{"line":2,"column":0},"generated":{"line":29,"column":29}},{"source":"declaration.es6","name":null,"original":{"line":4,"column":0},"generated":{"line":68,"column":0}},{"source":"declaration.es6","name":"Declaration","original":{"line":15,"column":6},"generated":{"line":81,"column":4}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":4},"generated":{"line":84,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":4},"generated":{"line":84,"column":11}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":4},"generated":{"line":84,"column":22}},{"source":"declaration.es6","name":"defaults","original":{"line":17,"column":16},"generated":{"line":84,"column":23}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":4},"generated":{"line":84,"column":31}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":84,"column":33}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":85,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":85,"column":4}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":85,"column":19}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":85,"column":20}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":85,"column":24}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":85,"column":26}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":85,"column":37}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":85,"column":38}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":87,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":87,"column":8}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":87,"column":13}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":87,"column":16}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":87,"column":42}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":87,"column":43}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":87,"column":47}},{"source":"declaration.es6","name":null,"original":{"line":18,"column":8},"generated":{"line":87,"column":49}},{"source":"declaration.es6","name":null,"original":{"line":18,"column":8},"generated":{"line":87,"column":54}},{"source":"declaration.es6","name":null,"original":{"line":18,"column":8},"generated":{"line":87,"column":55}},{"source":"declaration.es6","name":null,"original":{"line":18,"column":8},"generated":{"line":87,"column":59}},{"source":"declaration.es6","name":null,"original":{"line":18,"column":8},"generated":{"line":87,"column":60}},{"source":"declaration.es6","name":null,"original":{"line":18,"column":8},"generated":{"line":87,"column":64}},{"source":"declaration.es6","name":"defaults","original":{"line":18,"column":14},"generated":{"line":87,"column":66}},{"source":"declaration.es6","name":null,"original":{"line":18,"column":8},"generated":{"line":87,"column":74}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":87,"column":75}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":87,"column":76}},{"source":"declaration.es6","name":null,"original":{"line":19,"column":8},"generated":{"line":89,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":19,"column":8},"generated":{"line":89,"column":4}},{"source":"declaration.es6","name":null,"original":{"line":19,"column":8},"generated":{"line":89,"column":9}},{"source":"declaration.es6","name":"type","original":{"line":19,"column":13},"generated":{"line":89,"column":10}},{"source":"declaration.es6","name":null,"original":{"line":19,"column":8},"generated":{"line":89,"column":14}},{"source":"declaration.es6","name":null,"original":{"line":19,"column":20},"generated":{"line":89,"column":17}},{"source":"declaration.es6","name":null,"original":{"line":19,"column":8},"generated":{"line":89,"column":23}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":90,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":90,"column":11}},{"source":"declaration.es6","name":null,"original":{"line":17,"column":26},"generated":{"line":90,"column":16}},{"source":"declaration.es6","name":null,"original":{"line":20,"column":5},"generated":{"line":91,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":22,"column":17},"generated":{"line":95,"column":24}},{"source":"declaration.es6","name":null,"original":{"line":23,"column":8},"generated":{"line":96,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":23,"column":8},"generated":{"line":96,"column":7}},{"source":"declaration.es6","name":null,"original":{"line":23,"column":8},"generated":{"line":96,"column":10}},{"source":"declaration.es6","name":null,"original":{"line":23,"column":8},"generated":{"line":96,"column":20}},{"source":"declaration.es6","name":null,"original":{"line":23,"column":8},"generated":{"line":96,"column":21}},{"source":"declaration.es6","name":null,"original":{"line":23,"column":8},"generated":{"line":96,"column":28}},{"source":"declaration.es6","name":null,"original":{"line":23,"column":17},"generated":{"line":96,"column":30}},{"source":"declaration.es6","name":null,"original":{"line":23,"column":8},"generated":{"line":96,"column":79}},{"source":"declaration.es6","name":null,"original":{"line":24,"column":8},"generated":{"line":97,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":24,"column":15},"generated":{"line":97,"column":13}},{"source":"declaration.es6","name":"raws","original":{"line":24,"column":20},"generated":{"line":97,"column":18}},{"source":"declaration.es6","name":null,"original":{"line":24,"column":15},"generated":{"line":97,"column":22}},{"source":"declaration.es6","name":"value","original":{"line":24,"column":25},"generated":{"line":97,"column":23}},{"source":"declaration.es6","name":null,"original":{"line":24,"column":8},"generated":{"line":97,"column":28}},{"source":"declaration.es6","name":"val","original":{"line":27,"column":15},"generated":{"line":99,"column":22}},{"source":"declaration.es6","name":null,"original":{"line":27,"column":20},"generated":{"line":99,"column":27}},{"source":"declaration.es6","name":null,"original":{"line":28,"column":8},"generated":{"line":100,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":28,"column":8},"generated":{"line":100,"column":7}},{"source":"declaration.es6","name":null,"original":{"line":28,"column":8},"generated":{"line":100,"column":10}},{"source":"declaration.es6","name":null,"original":{"line":28,"column":8},"generated":{"line":100,"column":20}},{"source":"declaration.es6","name":null,"original":{"line":28,"column":8},"generated":{"line":100,"column":21}},{"source":"declaration.es6","name":null,"original":{"line":28,"column":8},"generated":{"line":100,"column":28}},{"source":"declaration.es6","name":null,"original":{"line":28,"column":17},"generated":{"line":100,"column":30}},{"source":"declaration.es6","name":null,"original":{"line":28,"column":8},"generated":{"line":100,"column":79}},{"source":"declaration.es6","name":null,"original":{"line":29,"column":8},"generated":{"line":101,"column":0}},{"source":"declaration.es6","name":"raws","original":{"line":29,"column":13},"generated":{"line":101,"column":11}},{"source":"declaration.es6","name":null,"original":{"line":29,"column":8},"generated":{"line":101,"column":15}},{"source":"declaration.es6","name":"value","original":{"line":29,"column":18},"generated":{"line":101,"column":16}},{"source":"declaration.es6","name":null,"original":{"line":29,"column":8},"generated":{"line":101,"column":21}},{"source":"declaration.es6","name":"val","original":{"line":29,"column":26},"generated":{"line":101,"column":24}},{"source":"declaration.es6","name":null,"original":{"line":29,"column":8},"generated":{"line":101,"column":27}},{"source":"declaration.es6","name":null,"original":{"line":30,"column":5},"generated":{"line":102,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":32,"column":21},"generated":{"line":105,"column":24}},{"source":"declaration.es6","name":null,"original":{"line":33,"column":8},"generated":{"line":106,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":33,"column":8},"generated":{"line":106,"column":7}},{"source":"declaration.es6","name":null,"original":{"line":33,"column":8},"generated":{"line":106,"column":10}},{"source":"declaration.es6","name":null,"original":{"line":33,"column":8},"generated":{"line":106,"column":20}},{"source":"declaration.es6","name":null,"original":{"line":33,"column":8},"generated":{"line":106,"column":21}},{"source":"declaration.es6","name":null,"original":{"line":33,"column":8},"generated":{"line":106,"column":28}},{"source":"declaration.es6","name":null,"original":{"line":33,"column":17},"generated":{"line":106,"column":30}},{"source":"declaration.es6","name":null,"original":{"line":33,"column":8},"generated":{"line":106,"column":87}},{"source":"declaration.es6","name":null,"original":{"line":34,"column":8},"generated":{"line":107,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":34,"column":15},"generated":{"line":107,"column":13}},{"source":"declaration.es6","name":"raws","original":{"line":34,"column":20},"generated":{"line":107,"column":18}},{"source":"declaration.es6","name":null,"original":{"line":34,"column":15},"generated":{"line":107,"column":22}},{"source":"declaration.es6","name":"important","original":{"line":34,"column":25},"generated":{"line":107,"column":23}},{"source":"declaration.es6","name":null,"original":{"line":34,"column":8},"generated":{"line":107,"column":32}},{"source":"declaration.es6","name":"val","original":{"line":37,"column":19},"generated":{"line":109,"column":22}},{"source":"declaration.es6","name":null,"original":{"line":37,"column":24},"generated":{"line":109,"column":27}},{"source":"declaration.es6","name":null,"original":{"line":38,"column":8},"generated":{"line":110,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":38,"column":8},"generated":{"line":110,"column":7}},{"source":"declaration.es6","name":null,"original":{"line":38,"column":8},"generated":{"line":110,"column":10}},{"source":"declaration.es6","name":null,"original":{"line":38,"column":8},"generated":{"line":110,"column":20}},{"source":"declaration.es6","name":null,"original":{"line":38,"column":8},"generated":{"line":110,"column":21}},{"source":"declaration.es6","name":null,"original":{"line":38,"column":8},"generated":{"line":110,"column":28}},{"source":"declaration.es6","name":null,"original":{"line":38,"column":17},"generated":{"line":110,"column":30}},{"source":"declaration.es6","name":null,"original":{"line":38,"column":8},"generated":{"line":110,"column":87}},{"source":"declaration.es6","name":null,"original":{"line":39,"column":8},"generated":{"line":111,"column":0}},{"source":"declaration.es6","name":"raws","original":{"line":39,"column":13},"generated":{"line":111,"column":11}},{"source":"declaration.es6","name":null,"original":{"line":39,"column":8},"generated":{"line":111,"column":15}},{"source":"declaration.es6","name":"important","original":{"line":39,"column":18},"generated":{"line":111,"column":16}},{"source":"declaration.es6","name":null,"original":{"line":39,"column":8},"generated":{"line":111,"column":25}},{"source":"declaration.es6","name":"val","original":{"line":39,"column":30},"generated":{"line":111,"column":28}},{"source":"declaration.es6","name":null,"original":{"line":39,"column":8},"generated":{"line":111,"column":31}},{"source":"declaration.es6","name":null,"original":{"line":40,"column":5},"generated":{"line":112,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":42,"column":4},"generated":{"line":113,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":52,"column":4},"generated":{"line":123,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":62,"column":4},"generated":{"line":133,"column":0}},{"source":"declaration.es6","name":null,"original":{"line":73,"column":4},"generated":{"line":144,"column":0}},{"source":"declaration.es6","name":"Declaration","original":{"line":100,"column":15},"generated":{"line":174,"column":18}}],"sources":{"declaration.es6":"import warnOnce from './warn-once';\nimport Node     from './node';\n\n/**\n * Represents a CSS declaration.\n *\n * @extends Node\n *\n * @example\n * const root = postcss.parse('a { color: black }');\n * const decl = root.first.first;\n * decl.type       //=> 'decl'\n * decl.toString() //=> ' color: black'\n */\nclass Declaration extends Node {\n\n    constructor(defaults) {\n        super(defaults);\n        this.type = 'decl';\n    }\n\n    get _value() {\n        warnOnce('Node#_value was deprecated. Use Node#raws.value');\n        return this.raws.value;\n    }\n\n    set _value(val) {\n        warnOnce('Node#_value was deprecated. Use Node#raws.value');\n        this.raws.value = val;\n    }\n\n    get _important() {\n        warnOnce('Node#_important was deprecated. Use Node#raws.important');\n        return this.raws.important;\n    }\n\n    set _important(val) {\n        warnOnce('Node#_important was deprecated. Use Node#raws.important');\n        this.raws.important = val;\n    }\n\n    /**\n     * @memberof Declaration#\n     * @member {string} prop - the declaration’s property name\n     *\n     * @example\n     * const root = postcss.parse('a { color: black }');\n     * const decl = root.first.first;\n     * decl.prop //=> 'color'\n     */\n\n    /**\n     * @memberof Declaration#\n     * @member {string} value - the declaration’s value\n     *\n     * @example\n     * const root = postcss.parse('a { color: black }');\n     * const decl = root.first.first;\n     * decl.value //=> 'black'\n     */\n\n    /**\n     * @memberof Declaration#\n     * @member {boolean} important - `true` if the declaration\n     *                               has an !important annotation.\n     *\n     * @example\n     * const root = postcss.parse('a { color: black !important; color: red }');\n     * root.first.first.important //=> true\n     * root.first.last.important  //=> undefined\n     */\n\n    /**\n     * @memberof Declaration#\n     * @member {object} raws - Information to generate byte-to-byte equal\n     *                         node string as it was in the origin input.\n     *\n     * Every parser saves its own properties,\n     * but the default CSS parser uses:\n     *\n     * * `before`: the space symbols before the node. It also stores `*`\n     *   and `_` symbols before the declaration (IE hack).\n     * * `between`: the symbols between the property and value\n     *   for declarations.\n     * * `important`: the content of the important statement,\n     *   if it is not just `!important`.\n     *\n     * PostCSS cleans declaration from comments and extra spaces,\n     * but it stores origin content in raws properties.\n     * As such, if you don’t change a declaration’s value,\n     * PostCSS will use the raw value with comments.\n     *\n     * @example\n     * const root = postcss.parse('a {\\n  color:black\\n}')\n     * root.first.first.raws //=> { before: '\\n  ', between: ':' }\n     */\n\n}\n\nexport default Declaration;\n"},"lineCount":null}},"error":null,"hash":"a6a2b36fe6934a0a76019e60eeb8bd22","cacheData":{"env":{}}}