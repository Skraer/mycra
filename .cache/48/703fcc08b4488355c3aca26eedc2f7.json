{"id":"node_modules/posthtml-svg-mode/lib/processor.js","dependencies":[{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/package.json","includedInParent":true,"mtime":1592223810651},{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/posthtml-svg-mode/package.json","includedInParent":true,"mtime":1591622454627},{"name":"posthtml","loc":{"line":1,"column":25},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/posthtml-svg-mode/lib/processor.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/posthtml/lib/index.js"},{"name":"./parser","loc":{"line":2,"column":23},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/posthtml-svg-mode/lib/processor.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/posthtml-svg-mode/lib/parser.js"},{"name":"./renderer","loc":{"line":3,"column":25},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/posthtml-svg-mode/lib/processor.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/posthtml-svg-mode/lib/renderer.js"}],"generated":{"js":"const PostHTML = require('posthtml');\nconst parser = require('./parser');\nconst renderer = require('./renderer');\n\n/**\n * @typedef {Object} PostHTMLTree\n * @see https://github.com/posthtml/posthtml/blob/master/docs/tree.md#json\n */\n\nclass PostHTMLProcessingResult {\n  constructor(tree) {\n    this.tree = tree;\n  }\n\n  get html() {\n    return this.toString();\n  }\n\n  toString() {\n    return renderer(this.tree, this.tree.options);\n  }\n\n  render() {\n    return this.toString();\n  }\n}\n\nclass Processor {\n  /**\n   * @param {Array<Function>} [plugins]\n   */\n  constructor(plugins) {\n    const posthtml = this.posthtml = PostHTML(plugins);\n    this.version = posthtml.version;\n    this.name = posthtml.name;\n    this.plugins = posthtml.plugins;\n  }\n\n  /**\n   * @param {...Function} plugins\n   * @return {Processor}\n   */\n  use(...plugins) {\n    this.posthtml.use.apply(this, ...plugins);\n    return this;\n  }\n\n  /**\n   * @param {string|PostHTMLTree} ast\n   * @param {Object} options {@see https://github.com/posthtml/posthtml-render#options}\n   * @return {Promise<PostHTMLProcessingResult>}\n   */\n  process(ast, options = null) {\n    const opts = Object.assign({ parser }, options);\n    return this.posthtml.process(ast, opts).then(({ tree }) => new PostHTMLProcessingResult(tree));\n  }\n}\n\nProcessor.parser = parser;\nProcessor.render = renderer;\n\n/**\n * @param {Array<Function>} [plugins]\n * @return {Processor}\n */\nmodule.exports = plugins => new Processor(plugins);\nmodule.exports.parser = parser;\nmodule.exports.renderer = renderer;\nmodule.exports.Processor = Processor;\nmodule.exports.Result = PostHTMLProcessingResult;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/posthtml-svg-mode/lib/processor.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}}],"sources":{"node_modules/posthtml-svg-mode/lib/processor.js":"const PostHTML = require('posthtml');\nconst parser = require('./parser');\nconst renderer = require('./renderer');\n\n/**\n * @typedef {Object} PostHTMLTree\n * @see https://github.com/posthtml/posthtml/blob/master/docs/tree.md#json\n */\n\nclass PostHTMLProcessingResult {\n  constructor(tree) {\n    this.tree = tree;\n  }\n\n  get html() {\n    return this.toString();\n  }\n\n  toString() {\n    return renderer(this.tree, this.tree.options);\n  }\n\n  render() {\n    return this.toString();\n  }\n}\n\nclass Processor {\n  /**\n   * @param {Array<Function>} [plugins]\n   */\n  constructor(plugins) {\n    const posthtml = this.posthtml = PostHTML(plugins);\n    this.version = posthtml.version;\n    this.name = posthtml.name;\n    this.plugins = posthtml.plugins;\n  }\n\n  /**\n   * @param {...Function} plugins\n   * @return {Processor}\n   */\n  use(...plugins) {\n    this.posthtml.use.apply(this, ...plugins);\n    return this;\n  }\n\n  /**\n   * @param {string|PostHTMLTree} ast\n   * @param {Object} options {@see https://github.com/posthtml/posthtml-render#options}\n   * @return {Promise<PostHTMLProcessingResult>}\n   */\n  process(ast, options = null) {\n    const opts = Object.assign({ parser }, options);\n    return this.posthtml.process(ast, opts).then(({ tree }) => new PostHTMLProcessingResult(tree));\n  }\n}\n\nProcessor.parser = parser;\nProcessor.render = renderer;\n\n/**\n * @param {Array<Function>} [plugins]\n * @return {Processor}\n */\nmodule.exports = plugins => new Processor(plugins);\nmodule.exports.parser = parser;\nmodule.exports.renderer = renderer;\nmodule.exports.Processor = Processor;\nmodule.exports.Result = PostHTMLProcessingResult;\n"},"lineCount":71}},"error":null,"hash":"cc14976cda10f15c612478462f1bd088","cacheData":{"env":{}}}