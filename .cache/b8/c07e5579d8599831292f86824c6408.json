{"id":"node_modules/bonjour/lib/mdns-server.js","dependencies":[{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/package.json","includedInParent":true,"mtime":1592223810651},{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bonjour/package.json","includedInParent":true,"mtime":1591602462304},{"name":"multicast-dns","loc":{"line":3,"column":27},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bonjour/lib/mdns-server.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/multicast-dns/index.js"},{"name":"dns-equal","loc":{"line":4,"column":23},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bonjour/lib/mdns-server.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/dns-equal/index.js"},{"name":"array-flatten","loc":{"line":5,"column":22},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bonjour/lib/mdns-server.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/array-flatten/array-flatten.js"},{"name":"deep-equal","loc":{"line":6,"column":24},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bonjour/lib/mdns-server.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/deep-equal/index.js"}],"generated":{"js":"'use strict'\n\nvar multicastdns = require('multicast-dns')\nvar dnsEqual = require('dns-equal')\nvar flatten = require('array-flatten')\nvar deepEqual = require('deep-equal')\n\nmodule.exports = Server\n\nfunction Server (opts) {\n  this.mdns = multicastdns(opts)\n  this.mdns.setMaxListeners(0)\n  this.registry = {}\n  this.mdns.on('query', this._respondToQuery.bind(this))\n}\n\nServer.prototype.register = function (records) {\n  var self = this\n\n  if (Array.isArray(records)) records.forEach(register)\n  else register(records)\n\n  function register (record) {\n    var subRegistry = self.registry[record.type]\n    if (!subRegistry) subRegistry = self.registry[record.type] = []\n    else if (subRegistry.some(isDuplicateRecord(record))) return\n    subRegistry.push(record)\n  }\n}\n\nServer.prototype.unregister = function (records) {\n  var self = this\n\n  if (Array.isArray(records)) records.forEach(unregister)\n  else unregister(records)\n\n  function unregister (record) {\n    var type = record.type\n    if (!(type in self.registry)) return\n    self.registry[type] = self.registry[type].filter(function (r) {\n      return r.name !== record.name\n    })\n  }\n}\n\nServer.prototype._respondToQuery = function (query) {\n  var self = this\n  query.questions.forEach(function (question) {\n    var type = question.type\n    var name = question.name\n\n    // generate the answers section\n    var answers = type === 'ANY'\n      ? flatten.depth(Object.keys(self.registry).map(self._recordsFor.bind(self, name)), 1)\n      : self._recordsFor(name, type)\n\n    if (answers.length === 0) return\n\n    // generate the additionals section\n    var additionals = []\n    if (type !== 'ANY') {\n      answers.forEach(function (answer) {\n        if (answer.type !== 'PTR') return\n        additionals = additionals\n          .concat(self._recordsFor(answer.data, 'SRV'))\n          .concat(self._recordsFor(answer.data, 'TXT'))\n      })\n\n      // to populate the A and AAAA records, we need to get a set of unique\n      // targets from the SRV record\n      additionals\n        .filter(function (record) {\n          return record.type === 'SRV'\n        })\n        .map(function (record) {\n          return record.data.target\n        })\n        .filter(unique())\n        .forEach(function (target) {\n          additionals = additionals\n            .concat(self._recordsFor(target, 'A'))\n            .concat(self._recordsFor(target, 'AAAA'))\n        })\n    }\n\n    self.mdns.respond({ answers: answers, additionals: additionals }, function (err) {\n      if (err) throw err // TODO: Handle this (if no callback is given, the error will be ignored)\n    })\n  })\n}\n\nServer.prototype._recordsFor = function (name, type) {\n  if (!(type in this.registry)) return []\n\n  return this.registry[type].filter(function (record) {\n    var _name = ~name.indexOf('.') ? record.name : record.name.split('.')[0]\n    return dnsEqual(_name, name)\n  })\n}\n\nfunction isDuplicateRecord (a) {\n  return function (b) {\n    return a.type === b.type &&\n      a.name === b.name &&\n      deepEqual(a.data, b.data)\n  }\n}\n\nfunction unique () {\n  var set = []\n  return function (obj) {\n    if (~set.indexOf(obj)) return false\n    set.push(obj)\n    return true\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/bonjour/lib/mdns-server.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}}],"sources":{"node_modules/bonjour/lib/mdns-server.js":"'use strict'\n\nvar multicastdns = require('multicast-dns')\nvar dnsEqual = require('dns-equal')\nvar flatten = require('array-flatten')\nvar deepEqual = require('deep-equal')\n\nmodule.exports = Server\n\nfunction Server (opts) {\n  this.mdns = multicastdns(opts)\n  this.mdns.setMaxListeners(0)\n  this.registry = {}\n  this.mdns.on('query', this._respondToQuery.bind(this))\n}\n\nServer.prototype.register = function (records) {\n  var self = this\n\n  if (Array.isArray(records)) records.forEach(register)\n  else register(records)\n\n  function register (record) {\n    var subRegistry = self.registry[record.type]\n    if (!subRegistry) subRegistry = self.registry[record.type] = []\n    else if (subRegistry.some(isDuplicateRecord(record))) return\n    subRegistry.push(record)\n  }\n}\n\nServer.prototype.unregister = function (records) {\n  var self = this\n\n  if (Array.isArray(records)) records.forEach(unregister)\n  else unregister(records)\n\n  function unregister (record) {\n    var type = record.type\n    if (!(type in self.registry)) return\n    self.registry[type] = self.registry[type].filter(function (r) {\n      return r.name !== record.name\n    })\n  }\n}\n\nServer.prototype._respondToQuery = function (query) {\n  var self = this\n  query.questions.forEach(function (question) {\n    var type = question.type\n    var name = question.name\n\n    // generate the answers section\n    var answers = type === 'ANY'\n      ? flatten.depth(Object.keys(self.registry).map(self._recordsFor.bind(self, name)), 1)\n      : self._recordsFor(name, type)\n\n    if (answers.length === 0) return\n\n    // generate the additionals section\n    var additionals = []\n    if (type !== 'ANY') {\n      answers.forEach(function (answer) {\n        if (answer.type !== 'PTR') return\n        additionals = additionals\n          .concat(self._recordsFor(answer.data, 'SRV'))\n          .concat(self._recordsFor(answer.data, 'TXT'))\n      })\n\n      // to populate the A and AAAA records, we need to get a set of unique\n      // targets from the SRV record\n      additionals\n        .filter(function (record) {\n          return record.type === 'SRV'\n        })\n        .map(function (record) {\n          return record.data.target\n        })\n        .filter(unique())\n        .forEach(function (target) {\n          additionals = additionals\n            .concat(self._recordsFor(target, 'A'))\n            .concat(self._recordsFor(target, 'AAAA'))\n        })\n    }\n\n    self.mdns.respond({ answers: answers, additionals: additionals }, function (err) {\n      if (err) throw err // TODO: Handle this (if no callback is given, the error will be ignored)\n    })\n  })\n}\n\nServer.prototype._recordsFor = function (name, type) {\n  if (!(type in this.registry)) return []\n\n  return this.registry[type].filter(function (record) {\n    var _name = ~name.indexOf('.') ? record.name : record.name.split('.')[0]\n    return dnsEqual(_name, name)\n  })\n}\n\nfunction isDuplicateRecord (a) {\n  return function (b) {\n    return a.type === b.type &&\n      a.name === b.name &&\n      deepEqual(a.data, b.data)\n  }\n}\n\nfunction unique () {\n  var set = []\n  return function (obj) {\n    if (~set.indexOf(obj)) return false\n    set.push(obj)\n    return true\n  }\n}\n"},"lineCount":117}},"error":null,"hash":"b5ba76a84c53c764f4fd308da11fe3df","cacheData":{"env":{}}}