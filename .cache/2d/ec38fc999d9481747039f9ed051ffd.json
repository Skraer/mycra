{"id":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","dependencies":[{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/package.json","includedInParent":true,"mtime":1592223810651},{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/stack-utils/node_modules/escape-string-regexp/package.json","includedInParent":true,"mtime":1591595750677}],"generated":{"js":"'use strict';\n\nvar matchOperatorsRegex = /[|\\\\{}()[\\]^$+*?.-]/g;\n\nmodule.exports = function (string) {\n  if (typeof string !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  return string.replace(matchOperatorsRegex, '\\\\$&');\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":3,"column":0}},{"name":"matchOperatorsRegex","generated":{"line":3,"column":4},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":3,"column":6}},{"generated":{"line":3,"column":23},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":3,"column":25}},{"generated":{"line":3,"column":26},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":3,"column":28}},{"generated":{"line":3,"column":48},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":3,"column":0}},{"name":"module","generated":{"line":5,"column":0},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":5,"column":0}},{"generated":{"line":5,"column":6},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":5,"column":6}},{"name":"exports","generated":{"line":5,"column":7},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":5,"column":7}},{"generated":{"line":5,"column":14},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":5,"column":0}},{"generated":{"line":5,"column":17},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":5,"column":17}},{"name":"string","generated":{"line":5,"column":27},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":5,"column":17}},{"generated":{"line":5,"column":33},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":5,"column":23}},{"generated":{"line":5,"column":35},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":5,"column":27}},{"generated":{"line":6,"column":0},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":6,"column":1}},{"generated":{"line":6,"column":6},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":6,"column":5}},{"name":"string","generated":{"line":6,"column":13},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":6,"column":12}},{"generated":{"line":6,"column":19},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":6,"column":5}},{"generated":{"line":6,"column":24},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":6,"column":23}},{"generated":{"line":6,"column":32},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":6,"column":1}},{"generated":{"line":6,"column":34},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":6,"column":33}},{"generated":{"line":7,"column":0},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":7,"column":2}},{"generated":{"line":7,"column":10},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":7,"column":8}},{"name":"TypeError","generated":{"line":7,"column":14},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":7,"column":12}},{"generated":{"line":7,"column":23},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":7,"column":8}},{"generated":{"line":7,"column":24},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":7,"column":22}},{"generated":{"line":7,"column":43},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":7,"column":8}},{"generated":{"line":7,"column":44},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":7,"column":2}},{"generated":{"line":8,"column":0},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":8,"column":2}},{"generated":{"line":10,"column":0},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":10,"column":1}},{"name":"string","generated":{"line":10,"column":9},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":10,"column":8}},{"generated":{"line":10,"column":15},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":10,"column":14}},{"name":"replace","generated":{"line":10,"column":16},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":10,"column":15}},{"generated":{"line":10,"column":23},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":10,"column":8}},{"name":"matchOperatorsRegex","generated":{"line":10,"column":24},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":10,"column":23}},{"generated":{"line":10,"column":43},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":10,"column":8}},{"generated":{"line":10,"column":45},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":10,"column":44}},{"generated":{"line":10,"column":51},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":10,"column":8}},{"generated":{"line":10,"column":52},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":10,"column":1}},{"generated":{"line":11,"column":0},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":11,"column":1}},{"generated":{"line":11,"column":1},"source":"node_modules/stack-utils/node_modules/escape-string-regexp/index.js","original":{"line":5,"column":0}}],"sources":{"node_modules/stack-utils/node_modules/escape-string-regexp/index.js":"'use strict';\n\nconst matchOperatorsRegex = /[|\\\\{}()[\\]^$+*?.-]/g;\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn string.replace(matchOperatorsRegex, '\\\\$&');\n};\n"},"lineCount":null}},"error":null,"hash":"5d388558f36b193553e2c96d886a4365","cacheData":{"env":{}}}