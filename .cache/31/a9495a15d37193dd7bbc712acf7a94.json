{"id":"node_modules/walker/lib/walker.js","dependencies":[{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/package.json","includedInParent":true,"mtime":1592223810651},{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/walker/package.json","includedInParent":true,"mtime":1591602461993},{"name":"path","loc":{"line":3,"column":19},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/walker/lib/walker.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/path-browserify/index.js"},{"name":"fs","loc":{"line":4,"column":17},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/walker/lib/walker.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"util","loc":{"line":5,"column":19},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/walker/lib/walker.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/util/util.js"},{"name":"events","loc":{"line":6,"column":27},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/walker/lib/walker.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/events/events.js"},{"name":"makeerror","loc":{"line":7,"column":24},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/walker/lib/walker.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/makeerror/lib/makeerror.js"}],"generated":{"js":"module.exports = Walker\n\nvar path = require('path')\n  , fs = require('fs')\n  , util = require('util')\n  , EventEmitter = require('events').EventEmitter\n  , makeError = require('makeerror')\n\n/**\n * To walk a directory. It's complicated (but it's async, so it must be fast).\n *\n * @param root {String} the directory to start with\n */\nfunction Walker(root) {\n  if (!(this instanceof Walker)) return new Walker(root)\n  EventEmitter.call(this)\n  this._pending = 0\n  this._filterDir = function() { return true }\n  this.go(root)\n}\nutil.inherits(Walker, EventEmitter)\n\n/**\n * Errors of this type are thrown when the type of a file could not be\n * determined.\n */\nvar UnknownFileTypeError = Walker.UnknownFileTypeError = makeError(\n  'UnknownFileTypeError',\n  'The type of this file could not be determined.'\n)\n\n/**\n * Setup a function to filter out directory entries.\n *\n * @param fn {Function} a function that will be given a directory name, which\n * if returns true will include the directory and it's children\n */\nWalker.prototype.filterDir = function(fn) {\n  this._filterDir = fn\n  return this\n}\n\n/**\n * Process a file or directory.\n */\nWalker.prototype.go = function(entry) {\n  var that = this\n  this._pending++\n\n  fs.lstat(entry, function(er, stat) {\n    if (er) {\n      that.emit('error', er, entry, stat)\n      that.doneOne()\n      return\n    }\n\n    if (stat.isDirectory()) {\n      if (!that._filterDir(entry, stat)) {\n        that.doneOne()\n      } else {\n        fs.readdir(entry, function(er, files) {\n          if (er) {\n            that.emit('error', er, entry, stat)\n            that.doneOne()\n            return\n          }\n\n          that.emit('entry', entry, stat)\n          that.emit('dir', entry, stat)\n          files.forEach(function(part) {\n            that.go(path.join(entry, part))\n          })\n          that.doneOne()\n        })\n      }\n    } else if (stat.isSymbolicLink()) {\n      that.emit('entry', entry, stat)\n      that.emit('symlink', entry, stat)\n      that.doneOne()\n    } else if (stat.isBlockDevice()) {\n      that.emit('entry', entry, stat)\n      that.emit('blockDevice', entry, stat)\n      that.doneOne()\n    } else if (stat.isCharacterDevice()) {\n      that.emit('entry', entry, stat)\n      that.emit('characterDevice', entry, stat)\n      that.doneOne()\n    } else if (stat.isFIFO()) {\n      that.emit('entry', entry, stat)\n      that.emit('fifo', entry, stat)\n      that.doneOne()\n    } else if (stat.isSocket()) {\n      that.emit('entry', entry, stat)\n      that.emit('socket', entry, stat)\n      that.doneOne()\n    } else if (stat.isFile()) {\n      that.emit('entry', entry, stat)\n      that.emit('file', entry, stat)\n      that.doneOne()\n    } else {\n      that.emit('error', UnknownFileTypeError(), entry, stat)\n      that.doneOne()\n    }\n  })\n  return this\n}\n\nWalker.prototype.doneOne = function() {\n  if (--this._pending === 0) this.emit('end')\n  return this\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/walker/lib/walker.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/walker/lib/walker.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}}],"sources":{"node_modules/walker/lib/walker.js":"module.exports = Walker\n\nvar path = require('path')\n  , fs = require('fs')\n  , util = require('util')\n  , EventEmitter = require('events').EventEmitter\n  , makeError = require('makeerror')\n\n/**\n * To walk a directory. It's complicated (but it's async, so it must be fast).\n *\n * @param root {String} the directory to start with\n */\nfunction Walker(root) {\n  if (!(this instanceof Walker)) return new Walker(root)\n  EventEmitter.call(this)\n  this._pending = 0\n  this._filterDir = function() { return true }\n  this.go(root)\n}\nutil.inherits(Walker, EventEmitter)\n\n/**\n * Errors of this type are thrown when the type of a file could not be\n * determined.\n */\nvar UnknownFileTypeError = Walker.UnknownFileTypeError = makeError(\n  'UnknownFileTypeError',\n  'The type of this file could not be determined.'\n)\n\n/**\n * Setup a function to filter out directory entries.\n *\n * @param fn {Function} a function that will be given a directory name, which\n * if returns true will include the directory and it's children\n */\nWalker.prototype.filterDir = function(fn) {\n  this._filterDir = fn\n  return this\n}\n\n/**\n * Process a file or directory.\n */\nWalker.prototype.go = function(entry) {\n  var that = this\n  this._pending++\n\n  fs.lstat(entry, function(er, stat) {\n    if (er) {\n      that.emit('error', er, entry, stat)\n      that.doneOne()\n      return\n    }\n\n    if (stat.isDirectory()) {\n      if (!that._filterDir(entry, stat)) {\n        that.doneOne()\n      } else {\n        fs.readdir(entry, function(er, files) {\n          if (er) {\n            that.emit('error', er, entry, stat)\n            that.doneOne()\n            return\n          }\n\n          that.emit('entry', entry, stat)\n          that.emit('dir', entry, stat)\n          files.forEach(function(part) {\n            that.go(path.join(entry, part))\n          })\n          that.doneOne()\n        })\n      }\n    } else if (stat.isSymbolicLink()) {\n      that.emit('entry', entry, stat)\n      that.emit('symlink', entry, stat)\n      that.doneOne()\n    } else if (stat.isBlockDevice()) {\n      that.emit('entry', entry, stat)\n      that.emit('blockDevice', entry, stat)\n      that.doneOne()\n    } else if (stat.isCharacterDevice()) {\n      that.emit('entry', entry, stat)\n      that.emit('characterDevice', entry, stat)\n      that.doneOne()\n    } else if (stat.isFIFO()) {\n      that.emit('entry', entry, stat)\n      that.emit('fifo', entry, stat)\n      that.doneOne()\n    } else if (stat.isSocket()) {\n      that.emit('entry', entry, stat)\n      that.emit('socket', entry, stat)\n      that.doneOne()\n    } else if (stat.isFile()) {\n      that.emit('entry', entry, stat)\n      that.emit('file', entry, stat)\n      that.doneOne()\n    } else {\n      that.emit('error', UnknownFileTypeError(), entry, stat)\n      that.doneOne()\n    }\n  })\n  return this\n}\n\nWalker.prototype.doneOne = function() {\n  if (--this._pending === 0) this.emit('end')\n  return this\n}\n"},"lineCount":112}},"error":null,"hash":"1eb2a334f6ac147a6e680df8262d8fc8","cacheData":{"env":{}}}