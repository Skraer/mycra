{"id":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","dependencies":[{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/package.json","includedInParent":true,"mtime":1592223810651},{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/@babel/helper-member-expression-to-functions/package.json","includedInParent":true,"mtime":1591602464306},{"name":"@babel/types","loc":{"line":8,"column":40},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/@babel/helper-member-expression-to-functions/lib/index.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/@babel/helper-member-expression-to-functions/node_modules/@babel/types/lib/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = memberExpressionToFunctions;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nclass AssignmentMemoiser {\n  constructor() {\n    this._map = new WeakMap();\n  }\n\n  has(key) {\n    return this._map.has(key);\n  }\n\n  get(key) {\n    if (!this.has(key)) return;\n\n    const record = this._map.get(key);\n\n    const {\n      value\n    } = record;\n    record.count--;\n\n    if (record.count === 0) {\n      return t.assignmentExpression(\"=\", value, key);\n    }\n\n    return value;\n  }\n\n  set(key, value, count) {\n    return this._map.set(key, {\n      count,\n      value\n    });\n  }\n\n}\n\nfunction toNonOptional(path, base) {\n  const {\n    node\n  } = path;\n\n  if (path.isOptionalMemberExpression()) {\n    return t.memberExpression(base, node.property, node.computed);\n  }\n\n  if (path.isOptionalCallExpression()) {\n    const callee = path.get(\"callee\");\n\n    if (path.node.optional && callee.isOptionalMemberExpression()) {\n      const {\n        object\n      } = callee.node;\n      const context = path.scope.maybeGenerateMemoised(object) || object;\n      callee.get(\"object\").replaceWith(t.assignmentExpression(\"=\", context, object));\n      return t.callExpression(t.memberExpression(base, t.identifier(\"call\")), [context, ...node.arguments]);\n    }\n\n    return t.callExpression(base, node.arguments);\n  }\n\n  return path.node;\n}\n\nfunction isInDetachedTree(path) {\n  while (path) {\n    if (path.isProgram()) break;\n    const {\n      parentPath,\n      container,\n      listKey\n    } = path;\n    const parentNode = parentPath.node;\n\n    if (listKey) {\n      if (container !== parentNode[listKey]) return true;\n    } else {\n      if (container !== parentNode) return true;\n    }\n\n    path = parentPath;\n  }\n\n  return false;\n}\n\nconst handle = {\n  memoise() {},\n\n  handle(member) {\n    const {\n      node,\n      parent,\n      parentPath\n    } = member;\n\n    if (member.isOptionalMemberExpression()) {\n      if (isInDetachedTree(member)) return;\n      const endPath = member.find(({\n        node,\n        parent,\n        parentPath\n      }) => {\n        if (parentPath.isOptionalMemberExpression()) {\n          return parent.optional || parent.object !== node;\n        }\n\n        if (parentPath.isOptionalCallExpression()) {\n          return node !== member.node && parent.optional || parent.callee !== node;\n        }\n\n        return true;\n      });\n      const rootParentPath = endPath.parentPath;\n\n      if (rootParentPath.isUpdateExpression({\n        argument: node\n      }) || rootParentPath.isAssignmentExpression({\n        left: node\n      })) {\n        throw member.buildCodeFrameError(`can't handle assignment`);\n      }\n\n      if (rootParentPath.isUnaryExpression({\n        operator: \"delete\"\n      })) {\n        throw member.buildCodeFrameError(`can't handle delete`);\n      }\n\n      let startingOptional = member;\n\n      for (;;) {\n        if (startingOptional.isOptionalMemberExpression()) {\n          if (startingOptional.node.optional) break;\n          startingOptional = startingOptional.get(\"object\");\n          continue;\n        } else if (startingOptional.isOptionalCallExpression()) {\n          if (startingOptional.node.optional) break;\n          startingOptional = startingOptional.get(\"callee\");\n          continue;\n        }\n\n        throw new Error(`Internal error: unexpected ${startingOptional.node.type}`);\n      }\n\n      const {\n        scope\n      } = member;\n      const startingProp = startingOptional.isOptionalMemberExpression() ? \"object\" : \"callee\";\n      const startingNode = startingOptional.node[startingProp];\n      const baseNeedsMemoised = scope.maybeGenerateMemoised(startingNode);\n      const baseRef = baseNeedsMemoised != null ? baseNeedsMemoised : startingNode;\n      const parentIsOptionalCall = parentPath.isOptionalCallExpression({\n        callee: node\n      });\n      startingOptional.replaceWith(toNonOptional(startingOptional, baseRef));\n\n      if (parentIsOptionalCall) {\n        if (parent.optional) {\n          parentPath.replaceWith(this.optionalCall(member, parent.arguments));\n        } else {\n          parentPath.replaceWith(this.call(member, parent.arguments));\n        }\n      } else {\n        member.replaceWith(this.get(member));\n      }\n\n      let regular = member.node;\n\n      for (let current = member; current !== endPath;) {\n        const {\n          parentPath\n        } = current;\n\n        if (parentPath === endPath && parentIsOptionalCall && parent.optional) {\n          regular = parentPath.node;\n          break;\n        }\n\n        regular = toNonOptional(parentPath, regular);\n        current = parentPath;\n      }\n\n      let context;\n      const endParentPath = endPath.parentPath;\n\n      if (t.isMemberExpression(regular) && endParentPath.isOptionalCallExpression({\n        callee: endPath.node,\n        optional: true\n      })) {\n        const {\n          object\n        } = regular;\n        context = member.scope.maybeGenerateMemoised(object);\n\n        if (context) {\n          regular.object = t.assignmentExpression(\"=\", context, object);\n        }\n      }\n\n      endPath.replaceWith(t.conditionalExpression(t.logicalExpression(\"||\", t.binaryExpression(\"===\", baseNeedsMemoised ? t.assignmentExpression(\"=\", baseRef, startingNode) : baseRef, t.nullLiteral()), t.binaryExpression(\"===\", t.cloneNode(baseRef), scope.buildUndefinedNode())), scope.buildUndefinedNode(), regular));\n\n      if (context) {\n        const endParent = endParentPath.node;\n        endParentPath.replaceWith(t.optionalCallExpression(t.optionalMemberExpression(endParent.callee, t.identifier(\"call\"), false, true), [context, ...endParent.arguments], false));\n      }\n\n      return;\n    }\n\n    if (parentPath.isUpdateExpression({\n      argument: node\n    })) {\n      if (this.simpleSet) {\n        member.replaceWith(this.simpleSet(member));\n        return;\n      }\n\n      const {\n        operator,\n        prefix\n      } = parent;\n      this.memoise(member, 2);\n      const value = t.binaryExpression(operator[0], t.unaryExpression(\"+\", this.get(member)), t.numericLiteral(1));\n\n      if (prefix) {\n        parentPath.replaceWith(this.set(member, value));\n      } else {\n        const {\n          scope\n        } = member;\n        const ref = scope.generateUidIdentifierBasedOnNode(node);\n        scope.push({\n          id: ref\n        });\n        value.left = t.assignmentExpression(\"=\", t.cloneNode(ref), value.left);\n        parentPath.replaceWith(t.sequenceExpression([this.set(member, value), t.cloneNode(ref)]));\n      }\n\n      return;\n    }\n\n    if (parentPath.isAssignmentExpression({\n      left: node\n    })) {\n      if (this.simpleSet) {\n        member.replaceWith(this.simpleSet(member));\n        return;\n      }\n\n      const {\n        operator,\n        right\n      } = parent;\n      let value = right;\n\n      if (operator !== \"=\") {\n        this.memoise(member, 2);\n        value = t.binaryExpression(operator.slice(0, -1), this.get(member), value);\n      }\n\n      parentPath.replaceWith(this.set(member, value));\n      return;\n    }\n\n    if (parentPath.isCallExpression({\n      callee: node\n    })) {\n      parentPath.replaceWith(this.call(member, parent.arguments));\n      return;\n    }\n\n    if (parentPath.isOptionalCallExpression({\n      callee: node\n    })) {\n      parentPath.replaceWith(this.optionalCall(member, parent.arguments));\n      return;\n    }\n\n    if (parentPath.isObjectProperty({\n      value: node\n    }) && parentPath.parentPath.isObjectPattern() || parentPath.isAssignmentPattern({\n      left: node\n    }) && parentPath.parentPath.isObjectProperty({\n      value: parent\n    }) && parentPath.parentPath.parentPath.isObjectPattern() || parentPath.isArrayPattern() || parentPath.isAssignmentPattern({\n      left: node\n    }) && parentPath.parentPath.isArrayPattern() || parentPath.isRestElement()) {\n      member.replaceWith(this.destructureSet(member));\n      return;\n    }\n\n    member.replaceWith(this.get(member));\n  }\n\n};\n\nfunction memberExpressionToFunctions(path, visitor, state) {\n  path.traverse(visitor, Object.assign(Object.assign(Object.assign({}, handle), state), {}, {\n    memoiser: new AssignmentMemoiser()\n  }));\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/@babel/helper-member-expression-to-functions/lib/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}}],"sources":{"node_modules/@babel/helper-member-expression-to-functions/lib/index.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = memberExpressionToFunctions;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nclass AssignmentMemoiser {\n  constructor() {\n    this._map = new WeakMap();\n  }\n\n  has(key) {\n    return this._map.has(key);\n  }\n\n  get(key) {\n    if (!this.has(key)) return;\n\n    const record = this._map.get(key);\n\n    const {\n      value\n    } = record;\n    record.count--;\n\n    if (record.count === 0) {\n      return t.assignmentExpression(\"=\", value, key);\n    }\n\n    return value;\n  }\n\n  set(key, value, count) {\n    return this._map.set(key, {\n      count,\n      value\n    });\n  }\n\n}\n\nfunction toNonOptional(path, base) {\n  const {\n    node\n  } = path;\n\n  if (path.isOptionalMemberExpression()) {\n    return t.memberExpression(base, node.property, node.computed);\n  }\n\n  if (path.isOptionalCallExpression()) {\n    const callee = path.get(\"callee\");\n\n    if (path.node.optional && callee.isOptionalMemberExpression()) {\n      const {\n        object\n      } = callee.node;\n      const context = path.scope.maybeGenerateMemoised(object) || object;\n      callee.get(\"object\").replaceWith(t.assignmentExpression(\"=\", context, object));\n      return t.callExpression(t.memberExpression(base, t.identifier(\"call\")), [context, ...node.arguments]);\n    }\n\n    return t.callExpression(base, node.arguments);\n  }\n\n  return path.node;\n}\n\nfunction isInDetachedTree(path) {\n  while (path) {\n    if (path.isProgram()) break;\n    const {\n      parentPath,\n      container,\n      listKey\n    } = path;\n    const parentNode = parentPath.node;\n\n    if (listKey) {\n      if (container !== parentNode[listKey]) return true;\n    } else {\n      if (container !== parentNode) return true;\n    }\n\n    path = parentPath;\n  }\n\n  return false;\n}\n\nconst handle = {\n  memoise() {},\n\n  handle(member) {\n    const {\n      node,\n      parent,\n      parentPath\n    } = member;\n\n    if (member.isOptionalMemberExpression()) {\n      if (isInDetachedTree(member)) return;\n      const endPath = member.find(({\n        node,\n        parent,\n        parentPath\n      }) => {\n        if (parentPath.isOptionalMemberExpression()) {\n          return parent.optional || parent.object !== node;\n        }\n\n        if (parentPath.isOptionalCallExpression()) {\n          return node !== member.node && parent.optional || parent.callee !== node;\n        }\n\n        return true;\n      });\n      const rootParentPath = endPath.parentPath;\n\n      if (rootParentPath.isUpdateExpression({\n        argument: node\n      }) || rootParentPath.isAssignmentExpression({\n        left: node\n      })) {\n        throw member.buildCodeFrameError(`can't handle assignment`);\n      }\n\n      if (rootParentPath.isUnaryExpression({\n        operator: \"delete\"\n      })) {\n        throw member.buildCodeFrameError(`can't handle delete`);\n      }\n\n      let startingOptional = member;\n\n      for (;;) {\n        if (startingOptional.isOptionalMemberExpression()) {\n          if (startingOptional.node.optional) break;\n          startingOptional = startingOptional.get(\"object\");\n          continue;\n        } else if (startingOptional.isOptionalCallExpression()) {\n          if (startingOptional.node.optional) break;\n          startingOptional = startingOptional.get(\"callee\");\n          continue;\n        }\n\n        throw new Error(`Internal error: unexpected ${startingOptional.node.type}`);\n      }\n\n      const {\n        scope\n      } = member;\n      const startingProp = startingOptional.isOptionalMemberExpression() ? \"object\" : \"callee\";\n      const startingNode = startingOptional.node[startingProp];\n      const baseNeedsMemoised = scope.maybeGenerateMemoised(startingNode);\n      const baseRef = baseNeedsMemoised != null ? baseNeedsMemoised : startingNode;\n      const parentIsOptionalCall = parentPath.isOptionalCallExpression({\n        callee: node\n      });\n      startingOptional.replaceWith(toNonOptional(startingOptional, baseRef));\n\n      if (parentIsOptionalCall) {\n        if (parent.optional) {\n          parentPath.replaceWith(this.optionalCall(member, parent.arguments));\n        } else {\n          parentPath.replaceWith(this.call(member, parent.arguments));\n        }\n      } else {\n        member.replaceWith(this.get(member));\n      }\n\n      let regular = member.node;\n\n      for (let current = member; current !== endPath;) {\n        const {\n          parentPath\n        } = current;\n\n        if (parentPath === endPath && parentIsOptionalCall && parent.optional) {\n          regular = parentPath.node;\n          break;\n        }\n\n        regular = toNonOptional(parentPath, regular);\n        current = parentPath;\n      }\n\n      let context;\n      const endParentPath = endPath.parentPath;\n\n      if (t.isMemberExpression(regular) && endParentPath.isOptionalCallExpression({\n        callee: endPath.node,\n        optional: true\n      })) {\n        const {\n          object\n        } = regular;\n        context = member.scope.maybeGenerateMemoised(object);\n\n        if (context) {\n          regular.object = t.assignmentExpression(\"=\", context, object);\n        }\n      }\n\n      endPath.replaceWith(t.conditionalExpression(t.logicalExpression(\"||\", t.binaryExpression(\"===\", baseNeedsMemoised ? t.assignmentExpression(\"=\", baseRef, startingNode) : baseRef, t.nullLiteral()), t.binaryExpression(\"===\", t.cloneNode(baseRef), scope.buildUndefinedNode())), scope.buildUndefinedNode(), regular));\n\n      if (context) {\n        const endParent = endParentPath.node;\n        endParentPath.replaceWith(t.optionalCallExpression(t.optionalMemberExpression(endParent.callee, t.identifier(\"call\"), false, true), [context, ...endParent.arguments], false));\n      }\n\n      return;\n    }\n\n    if (parentPath.isUpdateExpression({\n      argument: node\n    })) {\n      if (this.simpleSet) {\n        member.replaceWith(this.simpleSet(member));\n        return;\n      }\n\n      const {\n        operator,\n        prefix\n      } = parent;\n      this.memoise(member, 2);\n      const value = t.binaryExpression(operator[0], t.unaryExpression(\"+\", this.get(member)), t.numericLiteral(1));\n\n      if (prefix) {\n        parentPath.replaceWith(this.set(member, value));\n      } else {\n        const {\n          scope\n        } = member;\n        const ref = scope.generateUidIdentifierBasedOnNode(node);\n        scope.push({\n          id: ref\n        });\n        value.left = t.assignmentExpression(\"=\", t.cloneNode(ref), value.left);\n        parentPath.replaceWith(t.sequenceExpression([this.set(member, value), t.cloneNode(ref)]));\n      }\n\n      return;\n    }\n\n    if (parentPath.isAssignmentExpression({\n      left: node\n    })) {\n      if (this.simpleSet) {\n        member.replaceWith(this.simpleSet(member));\n        return;\n      }\n\n      const {\n        operator,\n        right\n      } = parent;\n      let value = right;\n\n      if (operator !== \"=\") {\n        this.memoise(member, 2);\n        value = t.binaryExpression(operator.slice(0, -1), this.get(member), value);\n      }\n\n      parentPath.replaceWith(this.set(member, value));\n      return;\n    }\n\n    if (parentPath.isCallExpression({\n      callee: node\n    })) {\n      parentPath.replaceWith(this.call(member, parent.arguments));\n      return;\n    }\n\n    if (parentPath.isOptionalCallExpression({\n      callee: node\n    })) {\n      parentPath.replaceWith(this.optionalCall(member, parent.arguments));\n      return;\n    }\n\n    if (parentPath.isObjectProperty({\n      value: node\n    }) && parentPath.parentPath.isObjectPattern() || parentPath.isAssignmentPattern({\n      left: node\n    }) && parentPath.parentPath.isObjectProperty({\n      value: parent\n    }) && parentPath.parentPath.parentPath.isObjectPattern() || parentPath.isArrayPattern() || parentPath.isAssignmentPattern({\n      left: node\n    }) && parentPath.parentPath.isArrayPattern() || parentPath.isRestElement()) {\n      member.replaceWith(this.destructureSet(member));\n      return;\n    }\n\n    member.replaceWith(this.get(member));\n  }\n\n};\n\nfunction memberExpressionToFunctions(path, visitor, state) {\n  path.traverse(visitor, Object.assign(Object.assign(Object.assign({}, handle), state), {}, {\n    memoiser: new AssignmentMemoiser()\n  }));\n}"},"lineCount":313}},"error":null,"hash":"f399d5fc931354fbf69ca5868701d13f","cacheData":{"env":{}}}