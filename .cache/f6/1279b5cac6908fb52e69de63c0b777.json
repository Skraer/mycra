{"id":"node_modules/tryer/src/tryer.js","dependencies":[{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/package.json","includedInParent":true,"mtime":1592223810651},{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/tryer/package.json","includedInParent":true,"mtime":1591602462221}],"generated":{"js":"var define;\n// Conditional and repeated task invocation for node and browser.\n\n/*globals setTimeout, define, module */\n\n(function (globals) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return tryer;\n    });\n  } else if (typeof module !== 'undefined' && module !== null) {\n    module.exports = tryer;\n  } else {\n    globals.tryer = tryer;\n  }\n\n  // Public function `tryer`.\n  //\n  // Performs some action when pre-requisite conditions are met and/or until\n  // post-requisite conditions are satisfied.\n  //\n  // @option action {function} The function that you want to invoke. Defaults to `() => {}`.\n  //                           If `action` returns a promise, iterations will not end until\n  //                           the promise is resolved or rejected. Alternatively, `action`\n  //                           may take a callback argument, `done`, to signal that it is\n  //                           asynchronous. In that case, you are responsible for calling\n  //                           `done` when the action is finished.\n  //\n  // @option when {function}   Predicate used to test pre-conditions. Should return `false`\n  //                           to postpone `action` or `true` to perform it. Defaults to\n  //                           `() => true`.\n  //\n  // @option until {function}  Predicate used to test post-conditions. Should return `false`\n  //                           to retry `action` or `true` to terminate it. Defaults to\n  //                           `() => true`.\n  //\n  // @option fail {function}   Callback to be invoked if `limit` tries are reached. Defaults\n  //                           to `() => {}`.\n  //\n  // @option pass {function}   Callback to be invoked after `until` has returned truthily.\n  //                           Defaults to `() => {}`.\n  //\n  // @option interval {number} Retry interval in milliseconds. A negative number indicates\n  //                           that subsequent retries should wait for double the interval\n  //                           from the preceding iteration (exponential backoff). Defaults\n  //                           to -1000.\n  //\n  // @option limit {number}    Maximum retry count, at which point the call fails and retries\n  //                           will cease. A negative number indicates that retries should\n  //                           continue indefinitely. Defaults to -1.\n  //\n  // @example\n  //   tryer({\n  //     when: () => db.isConnected,\n  //     action: () => db.insert(user),\n  //     fail () {\n  //       log.error('No database connection, terminating.');\n  //       process.exit(1);\n  //     },\n  //     interval: 1000,\n  //     limit: 10\n  //   });\n  //\n  // @example\n  //   let sent = false;\n  //   tryer({\n  //     until: () => sent,\n  //     action: done => {\n  //       smtp.send(email, error => {\n  //         if (! error) {\n  //           sent = true;\n  //         }\n  //         done();\n  //       });\n  //     },\n  //     pass: next,\n  //     interval: -1000,\n  //     limit: -1\n  //   });\n  function tryer (options) {\n    options = normaliseOptions(options);\n\n    iterateWhen();\n\n    function iterateWhen () {\n      if (preRecur()) {\n        iterateUntil();\n      }\n    }\n\n    function preRecur () {\n      return conditionallyRecur('when', iterateWhen);\n    }\n\n    function conditionallyRecur (predicateKey, iterate) {\n      if (! options[predicateKey]()) {\n        incrementCount(options);\n\n        if (shouldFail(options)) {\n          options.fail();\n        }  else {\n          recur(iterate, postIncrementInterval(options));\n        }\n\n        return false;\n      }\n\n      return true;\n    }\n\n    function iterateUntil () {\n      var result;\n\n      if (isActionSynchronous(options)) {\n        result = options.action();\n\n        if (result && isFunction(result.then)) {\n          return result.then(postRecur, postRecur);\n        }\n\n        return postRecur();\n      }\n\n      options.action(postRecur);\n    }\n\n    function postRecur () {\n      if (conditionallyRecur('until', iterateUntil)) {\n        options.pass();\n      }\n    }\n  }\n\n  function normaliseOptions (options) {\n    options = options || {};\n    return {\n      count: 0,\n      when: normalisePredicate(options.when),\n      until: normalisePredicate(options.until),\n      action: normaliseFunction(options.action),\n      fail: normaliseFunction(options.fail),\n      pass: normaliseFunction(options.pass),\n      interval: normaliseNumber(options.interval, -1000),\n      limit: normaliseNumber(options.limit, -1)\n    };\n  }\n\n  function normalisePredicate (fn) {\n    return normalise(fn, isFunction, yes);\n  }\n\n  function isFunction (fn) {\n    return typeof fn === 'function';\n  }\n\n  function yes () {\n    return true;\n  }\n\n  function normaliseFunction (fn) {\n    return normalise(fn, isFunction, nop);\n  }\n\n  function nop () {\n  }\n\n  function normalise (thing, predicate, defaultValue) {\n    if (predicate(thing)) {\n      return thing;\n    }\n\n    return defaultValue;\n  }\n\n  function normaliseNumber (number, defaultNumber) {\n    return normalise(number, isNumber, defaultNumber);\n  }\n\n  function isNumber (number) {\n    return typeof number === 'number' && number === number;\n  }\n\n  function isActionSynchronous (options) {\n    return options.action.length === 0;\n  }\n\n  function incrementCount (options) {\n    options.count += 1;\n  }\n\n  function shouldFail (options) {\n    return options.limit >= 0 && options.count >= options.limit;\n  }\n\n  function postIncrementInterval (options) {\n    var currentInterval = options.interval;\n\n    if (options.interval < 0) {\n      options.interval *= 2;\n    }\n\n    return currentInterval;\n  }\n\n  function recur (fn, interval) {\n    setTimeout(fn, Math.abs(interval));\n  }\n}(this));\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/tryer/src/tryer.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/tryer/src/tryer.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}}],"sources":{"node_modules/tryer/src/tryer.js":"// Conditional and repeated task invocation for node and browser.\n\n/*globals setTimeout, define, module */\n\n(function (globals) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return tryer;\n    });\n  } else if (typeof module !== 'undefined' && module !== null) {\n    module.exports = tryer;\n  } else {\n    globals.tryer = tryer;\n  }\n\n  // Public function `tryer`.\n  //\n  // Performs some action when pre-requisite conditions are met and/or until\n  // post-requisite conditions are satisfied.\n  //\n  // @option action {function} The function that you want to invoke. Defaults to `() => {}`.\n  //                           If `action` returns a promise, iterations will not end until\n  //                           the promise is resolved or rejected. Alternatively, `action`\n  //                           may take a callback argument, `done`, to signal that it is\n  //                           asynchronous. In that case, you are responsible for calling\n  //                           `done` when the action is finished.\n  //\n  // @option when {function}   Predicate used to test pre-conditions. Should return `false`\n  //                           to postpone `action` or `true` to perform it. Defaults to\n  //                           `() => true`.\n  //\n  // @option until {function}  Predicate used to test post-conditions. Should return `false`\n  //                           to retry `action` or `true` to terminate it. Defaults to\n  //                           `() => true`.\n  //\n  // @option fail {function}   Callback to be invoked if `limit` tries are reached. Defaults\n  //                           to `() => {}`.\n  //\n  // @option pass {function}   Callback to be invoked after `until` has returned truthily.\n  //                           Defaults to `() => {}`.\n  //\n  // @option interval {number} Retry interval in milliseconds. A negative number indicates\n  //                           that subsequent retries should wait for double the interval\n  //                           from the preceding iteration (exponential backoff). Defaults\n  //                           to -1000.\n  //\n  // @option limit {number}    Maximum retry count, at which point the call fails and retries\n  //                           will cease. A negative number indicates that retries should\n  //                           continue indefinitely. Defaults to -1.\n  //\n  // @example\n  //   tryer({\n  //     when: () => db.isConnected,\n  //     action: () => db.insert(user),\n  //     fail () {\n  //       log.error('No database connection, terminating.');\n  //       process.exit(1);\n  //     },\n  //     interval: 1000,\n  //     limit: 10\n  //   });\n  //\n  // @example\n  //   let sent = false;\n  //   tryer({\n  //     until: () => sent,\n  //     action: done => {\n  //       smtp.send(email, error => {\n  //         if (! error) {\n  //           sent = true;\n  //         }\n  //         done();\n  //       });\n  //     },\n  //     pass: next,\n  //     interval: -1000,\n  //     limit: -1\n  //   });\n  function tryer (options) {\n    options = normaliseOptions(options);\n\n    iterateWhen();\n\n    function iterateWhen () {\n      if (preRecur()) {\n        iterateUntil();\n      }\n    }\n\n    function preRecur () {\n      return conditionallyRecur('when', iterateWhen);\n    }\n\n    function conditionallyRecur (predicateKey, iterate) {\n      if (! options[predicateKey]()) {\n        incrementCount(options);\n\n        if (shouldFail(options)) {\n          options.fail();\n        }  else {\n          recur(iterate, postIncrementInterval(options));\n        }\n\n        return false;\n      }\n\n      return true;\n    }\n\n    function iterateUntil () {\n      var result;\n\n      if (isActionSynchronous(options)) {\n        result = options.action();\n\n        if (result && isFunction(result.then)) {\n          return result.then(postRecur, postRecur);\n        }\n\n        return postRecur();\n      }\n\n      options.action(postRecur);\n    }\n\n    function postRecur () {\n      if (conditionallyRecur('until', iterateUntil)) {\n        options.pass();\n      }\n    }\n  }\n\n  function normaliseOptions (options) {\n    options = options || {};\n    return {\n      count: 0,\n      when: normalisePredicate(options.when),\n      until: normalisePredicate(options.until),\n      action: normaliseFunction(options.action),\n      fail: normaliseFunction(options.fail),\n      pass: normaliseFunction(options.pass),\n      interval: normaliseNumber(options.interval, -1000),\n      limit: normaliseNumber(options.limit, -1)\n    };\n  }\n\n  function normalisePredicate (fn) {\n    return normalise(fn, isFunction, yes);\n  }\n\n  function isFunction (fn) {\n    return typeof fn === 'function';\n  }\n\n  function yes () {\n    return true;\n  }\n\n  function normaliseFunction (fn) {\n    return normalise(fn, isFunction, nop);\n  }\n\n  function nop () {\n  }\n\n  function normalise (thing, predicate, defaultValue) {\n    if (predicate(thing)) {\n      return thing;\n    }\n\n    return defaultValue;\n  }\n\n  function normaliseNumber (number, defaultNumber) {\n    return normalise(number, isNumber, defaultNumber);\n  }\n\n  function isNumber (number) {\n    return typeof number === 'number' && number === number;\n  }\n\n  function isActionSynchronous (options) {\n    return options.action.length === 0;\n  }\n\n  function incrementCount (options) {\n    options.count += 1;\n  }\n\n  function shouldFail (options) {\n    return options.limit >= 0 && options.count >= options.limit;\n  }\n\n  function postIncrementInterval (options) {\n    var currentInterval = options.interval;\n\n    if (options.interval < 0) {\n      options.interval *= 2;\n    }\n\n    return currentInterval;\n  }\n\n  function recur (fn, interval) {\n    setTimeout(fn, Math.abs(interval));\n  }\n}(this));\n\n"},"lineCount":212}},"error":null,"hash":"45df497087a6f46c4148815ddcfc0512","cacheData":{"env":{}}}