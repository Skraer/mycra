{"id":"node_modules/buffer-indexof/index.js","dependencies":[{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/package.json","includedInParent":true,"mtime":1592223810651},{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/buffer-indexof/package.json","includedInParent":true,"mtime":1591602463873},{"name":"buffer","parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/buffer-indexof/index.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nmodule.exports = function bufferIndexOf(buff, search, offset, encoding){\n  if (!Buffer.isBuffer(buff)) {\n    throw TypeError('buffer is not a buffer');\n  }\n\n  // allow optional offset when providing an encoding\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset;\n    offset = undefined;\n  }\n\n  if (typeof search === 'string') {\n    search = new Buffer(search, encoding || 'utf8');\n  } else if (typeof search === 'number' && !isNaN(search)) {\n    search = new Buffer([search])\n  } else if (!Buffer.isBuffer(search)) {\n    throw TypeError('search is not a bufferable object');\n  }\n\n  if (search.length === 0) {\n    return -1;\n  }\n\n  if (offset === undefined || (typeof offset === 'number' && isNaN(offset))) {\n    offset = 0;\n  } else if (typeof offset !== 'number') {\n    throw TypeError('offset is not a number');\n  }\n\n  if (offset < 0) {\n    offset = buff.length + offset\n  }\n\n  if (offset < 0) {\n    offset = 0;\n  }\n\n  var m = 0;\n  var s = -1;\n\n  for (var i = offset; i < buff.length ; ++i) {\n    if(buff[i] != search[m]){\n      s = -1;\n      // <-- go back\n      // match abc to aabc\n      // 'aabc'\n      // 'aab'\n      //    ^ no match\n      // a'abc'\n      //   ^ set index here now and look at these again.\n      //   'abc' yay!\n      i -= m-1\n      m = 0;\n    }\n\n    if(buff[i] == search[m]) {\n      if(s == -1) {\n        s = i;\n      }\n      ++m;\n      if(m == search.length) {\n        break;\n      }\n    }\n  }\n\n  if (s > -1 && buff.length - s < search.length) {\n    return -1;\n  }\n  return s;\n}\n\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/buffer-indexof/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/buffer-indexof/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}}],"sources":{"node_modules/buffer-indexof/index.js":"module.exports = function bufferIndexOf(buff, search, offset, encoding){\n  if (!Buffer.isBuffer(buff)) {\n    throw TypeError('buffer is not a buffer');\n  }\n\n  // allow optional offset when providing an encoding\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset;\n    offset = undefined;\n  }\n\n  if (typeof search === 'string') {\n    search = new Buffer(search, encoding || 'utf8');\n  } else if (typeof search === 'number' && !isNaN(search)) {\n    search = new Buffer([search])\n  } else if (!Buffer.isBuffer(search)) {\n    throw TypeError('search is not a bufferable object');\n  }\n\n  if (search.length === 0) {\n    return -1;\n  }\n\n  if (offset === undefined || (typeof offset === 'number' && isNaN(offset))) {\n    offset = 0;\n  } else if (typeof offset !== 'number') {\n    throw TypeError('offset is not a number');\n  }\n\n  if (offset < 0) {\n    offset = buff.length + offset\n  }\n\n  if (offset < 0) {\n    offset = 0;\n  }\n\n  var m = 0;\n  var s = -1;\n\n  for (var i = offset; i < buff.length ; ++i) {\n    if(buff[i] != search[m]){\n      s = -1;\n      // <-- go back\n      // match abc to aabc\n      // 'aabc'\n      // 'aab'\n      //    ^ no match\n      // a'abc'\n      //   ^ set index here now and look at these again.\n      //   'abc' yay!\n      i -= m-1\n      m = 0;\n    }\n\n    if(buff[i] == search[m]) {\n      if(s == -1) {\n        s = i;\n      }\n      ++m;\n      if(m == search.length) {\n        break;\n      }\n    }\n  }\n\n  if (s > -1 && buff.length - s < search.length) {\n    return -1;\n  }\n  return s;\n}\n\n\n"},"lineCount":75}},"error":null,"hash":"cf2173e8ea7295dbe23cda0e23283491","cacheData":{"env":{}}}