{"id":"node_modules/bser/index.js","dependencies":[{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/package.json","includedInParent":true,"mtime":1592223810651},{"name":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bser/package.json","includedInParent":true,"mtime":1591609122728},{"name":"events","loc":{"line":4,"column":17},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bser/index.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/events/events.js"},{"name":"util","loc":{"line":5,"column":19},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bser/index.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/util/util.js"},{"name":"os","loc":{"line":6,"column":17},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bser/index.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/os-browserify/browser.js"},{"name":"assert","loc":{"line":7,"column":21},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bser/index.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/assert/assert.js"},{"name":"node-int64","loc":{"line":8,"column":20},"parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bser/index.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/node-int64/Int64.js"},{"name":"buffer","parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bser/index.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/buffer/index.js"},{"name":"process","parent":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/bser/index.js","resolved":"/Users/ruslanidrisov/programming/projects/mycra/mycra/node_modules/process/browser.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar process = require(\"process\");\n/* Copyright 2015-present Facebook, Inc.\n * Licensed under the Apache License, Version 2.0 */\n\nvar EE = require('events').EventEmitter;\nvar util = require('util');\nvar os = require('os');\nvar assert = require('assert');\nvar Int64 = require('node-int64');\n\n// BSER uses the local endianness to reduce byte swapping overheads\n// (the protocol is expressly local IPC only).  We need to tell node\n// to use the native endianness when reading various native values.\nvar isBigEndian = os.endianness() == 'BE';\n\n// Find the next power-of-2 >= size\nfunction nextPow2(size) {\n  return Math.pow(2, Math.ceil(Math.log(size) / Math.LN2));\n}\n\n// Expandable buffer that we can provide a size hint for\nfunction Accumulator(initsize) {\n  this.buf = Buffer.alloc(nextPow2(initsize || 8192));\n  this.readOffset = 0;\n  this.writeOffset = 0;\n}\n// For testing\nexports.Accumulator = Accumulator\n\n// How much we can write into this buffer without allocating\nAccumulator.prototype.writeAvail = function() {\n  return this.buf.length - this.writeOffset;\n}\n\n// How much we can read\nAccumulator.prototype.readAvail = function() {\n  return this.writeOffset - this.readOffset;\n}\n\n// Ensure that we have enough space for size bytes\nAccumulator.prototype.reserve = function(size) {\n  if (size < this.writeAvail()) {\n    return;\n  }\n\n  // If we can make room by shunting down, do so\n  if (this.readOffset > 0) {\n    this.buf.copy(this.buf, 0, this.readOffset, this.writeOffset);\n    this.writeOffset -= this.readOffset;\n    this.readOffset = 0;\n  }\n\n  // If we made enough room, no need to allocate more\n  if (size < this.writeAvail()) {\n    return;\n  }\n\n  // Allocate a replacement and copy it in\n  var buf = Buffer.alloc(nextPow2(this.buf.length + size - this.writeAvail()));\n  this.buf.copy(buf);\n  this.buf = buf;\n}\n\n// Append buffer or string.  Will resize as needed\nAccumulator.prototype.append = function(buf) {\n  if (Buffer.isBuffer(buf)) {\n    this.reserve(buf.length);\n    buf.copy(this.buf, this.writeOffset, 0, buf.length);\n    this.writeOffset += buf.length;\n  } else {\n    var size = Buffer.byteLength(buf);\n    this.reserve(size);\n    this.buf.write(buf, this.writeOffset);\n    this.writeOffset += size;\n  }\n}\n\nAccumulator.prototype.assertReadableSize = function(size) {\n  if (this.readAvail() < size) {\n    throw new Error(\"wanted to read \" + size +\n        \" bytes but only have \" + this.readAvail());\n  }\n}\n\nAccumulator.prototype.peekString = function(size) {\n  this.assertReadableSize(size);\n  return this.buf.toString('utf-8', this.readOffset, this.readOffset + size);\n}\n\nAccumulator.prototype.readString = function(size) {\n  var str = this.peekString(size);\n  this.readOffset += size;\n  return str;\n}\n\nAccumulator.prototype.peekInt = function(size) {\n  this.assertReadableSize(size);\n  switch (size) {\n    case 1:\n      return this.buf.readInt8(this.readOffset, size);\n    case 2:\n      return isBigEndian ?\n        this.buf.readInt16BE(this.readOffset, size) :\n        this.buf.readInt16LE(this.readOffset, size);\n    case 4:\n      return isBigEndian ?\n        this.buf.readInt32BE(this.readOffset, size) :\n        this.buf.readInt32LE(this.readOffset, size);\n    case 8:\n        var big = this.buf.slice(this.readOffset, this.readOffset + 8);\n        if (isBigEndian) {\n          // On a big endian system we can simply pass the buffer directly\n          return new Int64(big);\n        }\n        // Otherwise we need to byteswap\n        return new Int64(byteswap64(big));\n    default:\n      throw new Error(\"invalid integer size \" + size);\n  }\n}\n\nAccumulator.prototype.readInt = function(bytes) {\n  var ival = this.peekInt(bytes);\n  if (ival instanceof Int64 && isFinite(ival.valueOf())) {\n    ival = ival.valueOf();\n  }\n  this.readOffset += bytes;\n  return ival;\n}\n\nAccumulator.prototype.peekDouble = function() {\n  this.assertReadableSize(8);\n  return isBigEndian ?\n    this.buf.readDoubleBE(this.readOffset) :\n    this.buf.readDoubleLE(this.readOffset);\n}\n\nAccumulator.prototype.readDouble = function() {\n  var dval = this.peekDouble();\n  this.readOffset += 8;\n  return dval;\n}\n\nAccumulator.prototype.readAdvance = function(size) {\n  if (size > 0) {\n    this.assertReadableSize(size);\n  } else if (size < 0 && this.readOffset + size < 0) {\n    throw new Error(\"advance with negative offset \" + size +\n        \" would seek off the start of the buffer\");\n  }\n  this.readOffset += size;\n}\n\nAccumulator.prototype.writeByte = function(value) {\n  this.reserve(1);\n  this.buf.writeInt8(value, this.writeOffset);\n  ++this.writeOffset;\n}\n\nAccumulator.prototype.writeInt = function(value, size) {\n  this.reserve(size);\n  switch (size) {\n    case 1:\n      this.buf.writeInt8(value, this.writeOffset);\n      break;\n    case 2:\n      if (isBigEndian) {\n        this.buf.writeInt16BE(value, this.writeOffset);\n      } else {\n        this.buf.writeInt16LE(value, this.writeOffset);\n      }\n      break;\n    case 4:\n      if (isBigEndian) {\n        this.buf.writeInt32BE(value, this.writeOffset);\n      } else {\n        this.buf.writeInt32LE(value, this.writeOffset);\n      }\n      break;\n    default:\n      throw new Error(\"unsupported integer size \" + size);\n  }\n  this.writeOffset += size;\n}\n\nAccumulator.prototype.writeDouble = function(value) {\n  this.reserve(8);\n  if (isBigEndian) {\n    this.buf.writeDoubleBE(value, this.writeOffset);\n  } else {\n    this.buf.writeDoubleLE(value, this.writeOffset);\n  }\n  this.writeOffset += 8;\n}\n\nvar BSER_ARRAY     = 0x00;\nvar BSER_OBJECT    = 0x01;\nvar BSER_STRING    = 0x02;\nvar BSER_INT8      = 0x03;\nvar BSER_INT16     = 0x04;\nvar BSER_INT32     = 0x05;\nvar BSER_INT64     = 0x06;\nvar BSER_REAL      = 0x07;\nvar BSER_TRUE      = 0x08;\nvar BSER_FALSE     = 0x09;\nvar BSER_NULL      = 0x0a;\nvar BSER_TEMPLATE  = 0x0b;\nvar BSER_SKIP      = 0x0c;\n\nvar ST_NEED_PDU = 0; // Need to read and decode PDU length\nvar ST_FILL_PDU = 1; // Know the length, need to read whole content\n\nvar MAX_INT8 = 127;\nvar MAX_INT16 = 32767;\nvar MAX_INT32 = 2147483647;\n\nfunction BunserBuf() {\n  EE.call(this);\n  this.buf = new Accumulator();\n  this.state = ST_NEED_PDU;\n}\nutil.inherits(BunserBuf, EE);\nexports.BunserBuf = BunserBuf;\n\nBunserBuf.prototype.append = function(buf, synchronous) {\n  if (synchronous) {\n    this.buf.append(buf);\n    return this.process(synchronous);\n  }\n\n  try {\n    this.buf.append(buf);\n  } catch (err) {\n    this.emit('error', err);\n    return;\n  }\n  // Arrange to decode later.  This allows the consuming\n  // application to make progress with other work in the\n  // case that we have a lot of subscription updates coming\n  // in from a large tree.\n  this.processLater();\n}\n\nBunserBuf.prototype.processLater = function() {\n  var self = this;\n  process.nextTick(function() {\n    try {\n      self.process(false);\n    } catch (err) {\n      self.emit('error', err);\n    }\n  });\n}\n\n// Do something with the buffer to advance our state.\n// If we're running synchronously we'll return either\n// the value we've decoded or undefined if we don't\n// yet have enought data.\n// If we're running asynchronously, we'll emit the value\n// when it becomes ready and schedule another invocation\n// of process on the next tick if we still have data we\n// can process.\nBunserBuf.prototype.process = function(synchronous) {\n  if (this.state == ST_NEED_PDU) {\n    if (this.buf.readAvail() < 2) {\n      return;\n    }\n    // Validate BSER header\n    this.expectCode(0);\n    this.expectCode(1);\n    this.pduLen = this.decodeInt(true /* relaxed */);\n    if (this.pduLen === false) {\n      // Need more data, walk backwards\n      this.buf.readAdvance(-2);\n      return;\n    }\n    // Ensure that we have a big enough buffer to read the rest of the PDU\n    this.buf.reserve(this.pduLen);\n    this.state = ST_FILL_PDU;\n  }\n\n  if (this.state == ST_FILL_PDU) {\n    if (this.buf.readAvail() < this.pduLen) {\n      // Need more data\n      return;\n    }\n\n    // We have enough to decode it\n    var val = this.decodeAny();\n    if (synchronous) {\n      return val;\n    }\n    this.emit('value', val);\n    this.state = ST_NEED_PDU;\n  }\n\n  if (!synchronous && this.buf.readAvail() > 0) {\n    this.processLater();\n  }\n}\n\nBunserBuf.prototype.raise = function(reason) {\n  throw new Error(reason + \", in Buffer of length \" +\n      this.buf.buf.length + \" (\" + this.buf.readAvail() +\n      \" readable) at offset \" + this.buf.readOffset + \" buffer: \" +\n      JSON.stringify(this.buf.buf.slice(\n          this.buf.readOffset, this.buf.readOffset + 32).toJSON()));\n}\n\nBunserBuf.prototype.expectCode = function(expected) {\n  var code = this.buf.readInt(1);\n  if (code != expected) {\n    this.raise(\"expected bser opcode \" + expected + \" but got \" + code);\n  }\n}\n\nBunserBuf.prototype.decodeAny = function() {\n  var code = this.buf.peekInt(1);\n  switch (code) {\n    case BSER_INT8:\n    case BSER_INT16:\n    case BSER_INT32:\n    case BSER_INT64:\n      return this.decodeInt();\n    case BSER_REAL:\n      this.buf.readAdvance(1);\n      return this.buf.readDouble();\n    case BSER_TRUE:\n      this.buf.readAdvance(1);\n      return true;\n    case BSER_FALSE:\n      this.buf.readAdvance(1);\n      return false;\n    case BSER_NULL:\n      this.buf.readAdvance(1);\n      return null;\n    case BSER_STRING:\n      return this.decodeString();\n    case BSER_ARRAY:\n      return this.decodeArray();\n    case BSER_OBJECT:\n      return this.decodeObject();\n    case BSER_TEMPLATE:\n      return this.decodeTemplate();\n    default:\n      this.raise(\"unhandled bser opcode \" + code);\n  }\n}\n\nBunserBuf.prototype.decodeArray = function() {\n  this.expectCode(BSER_ARRAY);\n  var nitems = this.decodeInt();\n  var arr = [];\n  for (var i = 0; i < nitems; ++i) {\n    arr.push(this.decodeAny());\n  }\n  return arr;\n}\n\nBunserBuf.prototype.decodeObject = function() {\n  this.expectCode(BSER_OBJECT);\n  var nitems = this.decodeInt();\n  var res = {};\n  for (var i = 0; i < nitems; ++i) {\n    var key = this.decodeString();\n    var val = this.decodeAny();\n    res[key] = val;\n  }\n  return res;\n}\n\nBunserBuf.prototype.decodeTemplate = function() {\n  this.expectCode(BSER_TEMPLATE);\n  var keys = this.decodeArray();\n  var nitems = this.decodeInt();\n  var arr = [];\n  for (var i = 0; i < nitems; ++i) {\n    var obj = {};\n    for (var keyidx = 0; keyidx < keys.length; ++keyidx) {\n      if (this.buf.peekInt(1) == BSER_SKIP) {\n        this.buf.readAdvance(1);\n        continue;\n      }\n      var val = this.decodeAny();\n      obj[keys[keyidx]] = val;\n    }\n    arr.push(obj);\n  }\n  return arr;\n}\n\nBunserBuf.prototype.decodeString = function() {\n  this.expectCode(BSER_STRING);\n  var len = this.decodeInt();\n  return this.buf.readString(len);\n}\n\n// This is unusual compared to the other decode functions in that\n// we may not have enough data available to satisfy the read, and\n// we don't want to throw.  This is only true when we're reading\n// the PDU length from the PDU header; we'll set relaxSizeAsserts\n// in that case.\nBunserBuf.prototype.decodeInt = function(relaxSizeAsserts) {\n  if (relaxSizeAsserts && (this.buf.readAvail() < 1)) {\n    return false;\n  } else {\n    this.buf.assertReadableSize(1);\n  }\n  var code = this.buf.peekInt(1);\n  var size = 0;\n  switch (code) {\n    case BSER_INT8:\n      size = 1;\n      break;\n    case BSER_INT16:\n      size = 2;\n      break;\n    case BSER_INT32:\n      size = 4;\n      break;\n    case BSER_INT64:\n      size = 8;\n      break;\n    default:\n      this.raise(\"invalid bser int encoding \" + code);\n  }\n\n  if (relaxSizeAsserts && (this.buf.readAvail() < 1 + size)) {\n    return false;\n  }\n  this.buf.readAdvance(1);\n  return this.buf.readInt(size);\n}\n\n// synchronously BSER decode a string and return the value\nfunction loadFromBuffer(input) {\n  var buf = new BunserBuf();\n  var result = buf.append(input, true);\n  if (buf.buf.readAvail()) {\n    throw Error(\n        'excess data found after input buffer, use BunserBuf instead');\n  }\n  if (typeof result === 'undefined') {\n    throw Error(\n        'no bser found in string and no error raised!?');\n  }\n  return result;\n}\nexports.loadFromBuffer = loadFromBuffer\n\n// Byteswap an arbitrary buffer, flipping from one endian\n// to the other, returning a new buffer with the resultant data\nfunction byteswap64(buf) {\n  var swap = Buffer.alloc(buf.length);\n  for (var i = 0; i < buf.length; i++) {\n    swap[i] = buf[buf.length -1 - i];\n  }\n  return swap;\n}\n\nfunction dump_int64(buf, val) {\n  // Get the raw bytes.  The Int64 buffer is big endian\n  var be = val.toBuffer();\n\n  if (isBigEndian) {\n    // We're a big endian system, so the buffer is exactly how we\n    // want it to be\n    buf.writeByte(BSER_INT64);\n    buf.append(be);\n    return;\n  }\n  // We need to byte swap to get the correct representation\n  var le = byteswap64(be);\n  buf.writeByte(BSER_INT64);\n  buf.append(le);\n}\n\nfunction dump_int(buf, val) {\n  var abs = Math.abs(val);\n  if (abs <= MAX_INT8) {\n    buf.writeByte(BSER_INT8);\n    buf.writeInt(val, 1);\n  } else if (abs <= MAX_INT16) {\n    buf.writeByte(BSER_INT16);\n    buf.writeInt(val, 2);\n  } else if (abs <= MAX_INT32) {\n    buf.writeByte(BSER_INT32);\n    buf.writeInt(val, 4);\n  } else {\n    dump_int64(buf, new Int64(val));\n  }\n}\n\nfunction dump_any(buf, val) {\n  switch (typeof(val)) {\n    case 'number':\n      // check if it is an integer or a float\n      if (isFinite(val) && Math.floor(val) === val) {\n        dump_int(buf, val);\n      } else {\n        buf.writeByte(BSER_REAL);\n        buf.writeDouble(val);\n      }\n      return;\n    case 'string':\n      buf.writeByte(BSER_STRING);\n      dump_int(buf, Buffer.byteLength(val));\n      buf.append(val);\n      return;\n    case 'boolean':\n      buf.writeByte(val ? BSER_TRUE : BSER_FALSE);\n      return;\n    case 'object':\n      if (val === null) {\n        buf.writeByte(BSER_NULL);\n        return;\n      }\n      if (val instanceof Int64) {\n        dump_int64(buf, val);\n        return;\n      }\n      if (Array.isArray(val)) {\n        buf.writeByte(BSER_ARRAY);\n        dump_int(buf, val.length);\n        for (var i = 0; i < val.length; ++i) {\n          dump_any(buf, val[i]);\n        }\n        return;\n      }\n      buf.writeByte(BSER_OBJECT);\n      var keys = Object.keys(val);\n\n      // First pass to compute number of defined keys\n      var num_keys = keys.length;\n      for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var v = val[key];\n        if (typeof(v) == 'undefined') {\n          num_keys--;\n        }\n      }\n      dump_int(buf, num_keys);\n      for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var v = val[key];\n        if (typeof(v) == 'undefined') {\n          // Don't include it\n          continue;\n        }\n        dump_any(buf, key);\n        try {\n          dump_any(buf, v);\n        } catch (e) {\n          throw new Error(\n            e.message + ' (while serializing object property with name `' +\n              key + \"')\");\n        }\n      }\n      return;\n\n    default:\n      throw new Error('cannot serialize type ' + typeof(val) + ' to BSER');\n  }\n}\n\n// BSER encode value and return a buffer of the contents\nfunction dumpToBuffer(val) {\n  var buf = new Accumulator();\n  // Build out the header\n  buf.writeByte(0);\n  buf.writeByte(1);\n  // Reserve room for an int32 to hold our PDU length\n  buf.writeByte(BSER_INT32);\n  buf.writeInt(0, 4); // We'll come back and fill this in at the end\n\n  dump_any(buf, val);\n\n  // Compute PDU length\n  var off = buf.writeOffset;\n  var len = off - 7 /* the header length */;\n  buf.writeOffset = 3; // The length value to fill in\n  buf.writeInt(len, 4); // write the length in the space we reserved\n  buf.writeOffset = off;\n\n  return buf.buf.slice(0, off);\n}\nexports.dumpToBuffer = dumpToBuffer\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/bser/index.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":407,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":408,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":409,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":410,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":411,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":412,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":413,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":414,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":415,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":416,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":417,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":418,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":419,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":420,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":421,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":422,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":423,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":424,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":425,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":426,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":427,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":428,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":429,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":430,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":431,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":432,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":433,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":434,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":435,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":436,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":437,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":438,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":439,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":440,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":441,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":442,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":443,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":444,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":445,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":446,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":447,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":448,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":449,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":450,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":451,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":452,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":453,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":454,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":455,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":456,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":457,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":458,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":459,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":460,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":461,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":462,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":463,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":464,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":465,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":466,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":467,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":468,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":469,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":470,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":471,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":472,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":473,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":474,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":475,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":476,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":477,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":478,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":479,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":480,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":481,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":482,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":483,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":484,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":485,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":486,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":487,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":488,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":489,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":490,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":491,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":492,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":493,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":494,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":495,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":496,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":497,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":498,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":499,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":500,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":501,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":502,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":503,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":504,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":505,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":506,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":507,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":508,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":509,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":510,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":511,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":512,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":513,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":514,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":515,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":516,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":517,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":518,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":519,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":520,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":521,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":522,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":523,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":524,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":525,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":526,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":527,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":528,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":529,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":530,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":531,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":532,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":533,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":534,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":535,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":536,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":537,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":538,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":539,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":540,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":541,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":542,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":543,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":544,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":545,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":546,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":547,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":548,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":549,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":550,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":551,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":552,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":553,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":554,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":555,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":556,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":557,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":558,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":559,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":560,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":561,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":562,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":563,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":564,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":565,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":566,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":567,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":568,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":569,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":570,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":571,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":572,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":573,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":574,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":575,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":576,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":577,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":578,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":579,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":580,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":581,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":582,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":583,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":584,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":585,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":586,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/bser/index.js","original":{"line":587,"column":0},"generated":{"line":589,"column":0}}],"sources":{"node_modules/bser/index.js":"/* Copyright 2015-present Facebook, Inc.\n * Licensed under the Apache License, Version 2.0 */\n\nvar EE = require('events').EventEmitter;\nvar util = require('util');\nvar os = require('os');\nvar assert = require('assert');\nvar Int64 = require('node-int64');\n\n// BSER uses the local endianness to reduce byte swapping overheads\n// (the protocol is expressly local IPC only).  We need to tell node\n// to use the native endianness when reading various native values.\nvar isBigEndian = os.endianness() == 'BE';\n\n// Find the next power-of-2 >= size\nfunction nextPow2(size) {\n  return Math.pow(2, Math.ceil(Math.log(size) / Math.LN2));\n}\n\n// Expandable buffer that we can provide a size hint for\nfunction Accumulator(initsize) {\n  this.buf = Buffer.alloc(nextPow2(initsize || 8192));\n  this.readOffset = 0;\n  this.writeOffset = 0;\n}\n// For testing\nexports.Accumulator = Accumulator\n\n// How much we can write into this buffer without allocating\nAccumulator.prototype.writeAvail = function() {\n  return this.buf.length - this.writeOffset;\n}\n\n// How much we can read\nAccumulator.prototype.readAvail = function() {\n  return this.writeOffset - this.readOffset;\n}\n\n// Ensure that we have enough space for size bytes\nAccumulator.prototype.reserve = function(size) {\n  if (size < this.writeAvail()) {\n    return;\n  }\n\n  // If we can make room by shunting down, do so\n  if (this.readOffset > 0) {\n    this.buf.copy(this.buf, 0, this.readOffset, this.writeOffset);\n    this.writeOffset -= this.readOffset;\n    this.readOffset = 0;\n  }\n\n  // If we made enough room, no need to allocate more\n  if (size < this.writeAvail()) {\n    return;\n  }\n\n  // Allocate a replacement and copy it in\n  var buf = Buffer.alloc(nextPow2(this.buf.length + size - this.writeAvail()));\n  this.buf.copy(buf);\n  this.buf = buf;\n}\n\n// Append buffer or string.  Will resize as needed\nAccumulator.prototype.append = function(buf) {\n  if (Buffer.isBuffer(buf)) {\n    this.reserve(buf.length);\n    buf.copy(this.buf, this.writeOffset, 0, buf.length);\n    this.writeOffset += buf.length;\n  } else {\n    var size = Buffer.byteLength(buf);\n    this.reserve(size);\n    this.buf.write(buf, this.writeOffset);\n    this.writeOffset += size;\n  }\n}\n\nAccumulator.prototype.assertReadableSize = function(size) {\n  if (this.readAvail() < size) {\n    throw new Error(\"wanted to read \" + size +\n        \" bytes but only have \" + this.readAvail());\n  }\n}\n\nAccumulator.prototype.peekString = function(size) {\n  this.assertReadableSize(size);\n  return this.buf.toString('utf-8', this.readOffset, this.readOffset + size);\n}\n\nAccumulator.prototype.readString = function(size) {\n  var str = this.peekString(size);\n  this.readOffset += size;\n  return str;\n}\n\nAccumulator.prototype.peekInt = function(size) {\n  this.assertReadableSize(size);\n  switch (size) {\n    case 1:\n      return this.buf.readInt8(this.readOffset, size);\n    case 2:\n      return isBigEndian ?\n        this.buf.readInt16BE(this.readOffset, size) :\n        this.buf.readInt16LE(this.readOffset, size);\n    case 4:\n      return isBigEndian ?\n        this.buf.readInt32BE(this.readOffset, size) :\n        this.buf.readInt32LE(this.readOffset, size);\n    case 8:\n        var big = this.buf.slice(this.readOffset, this.readOffset + 8);\n        if (isBigEndian) {\n          // On a big endian system we can simply pass the buffer directly\n          return new Int64(big);\n        }\n        // Otherwise we need to byteswap\n        return new Int64(byteswap64(big));\n    default:\n      throw new Error(\"invalid integer size \" + size);\n  }\n}\n\nAccumulator.prototype.readInt = function(bytes) {\n  var ival = this.peekInt(bytes);\n  if (ival instanceof Int64 && isFinite(ival.valueOf())) {\n    ival = ival.valueOf();\n  }\n  this.readOffset += bytes;\n  return ival;\n}\n\nAccumulator.prototype.peekDouble = function() {\n  this.assertReadableSize(8);\n  return isBigEndian ?\n    this.buf.readDoubleBE(this.readOffset) :\n    this.buf.readDoubleLE(this.readOffset);\n}\n\nAccumulator.prototype.readDouble = function() {\n  var dval = this.peekDouble();\n  this.readOffset += 8;\n  return dval;\n}\n\nAccumulator.prototype.readAdvance = function(size) {\n  if (size > 0) {\n    this.assertReadableSize(size);\n  } else if (size < 0 && this.readOffset + size < 0) {\n    throw new Error(\"advance with negative offset \" + size +\n        \" would seek off the start of the buffer\");\n  }\n  this.readOffset += size;\n}\n\nAccumulator.prototype.writeByte = function(value) {\n  this.reserve(1);\n  this.buf.writeInt8(value, this.writeOffset);\n  ++this.writeOffset;\n}\n\nAccumulator.prototype.writeInt = function(value, size) {\n  this.reserve(size);\n  switch (size) {\n    case 1:\n      this.buf.writeInt8(value, this.writeOffset);\n      break;\n    case 2:\n      if (isBigEndian) {\n        this.buf.writeInt16BE(value, this.writeOffset);\n      } else {\n        this.buf.writeInt16LE(value, this.writeOffset);\n      }\n      break;\n    case 4:\n      if (isBigEndian) {\n        this.buf.writeInt32BE(value, this.writeOffset);\n      } else {\n        this.buf.writeInt32LE(value, this.writeOffset);\n      }\n      break;\n    default:\n      throw new Error(\"unsupported integer size \" + size);\n  }\n  this.writeOffset += size;\n}\n\nAccumulator.prototype.writeDouble = function(value) {\n  this.reserve(8);\n  if (isBigEndian) {\n    this.buf.writeDoubleBE(value, this.writeOffset);\n  } else {\n    this.buf.writeDoubleLE(value, this.writeOffset);\n  }\n  this.writeOffset += 8;\n}\n\nvar BSER_ARRAY     = 0x00;\nvar BSER_OBJECT    = 0x01;\nvar BSER_STRING    = 0x02;\nvar BSER_INT8      = 0x03;\nvar BSER_INT16     = 0x04;\nvar BSER_INT32     = 0x05;\nvar BSER_INT64     = 0x06;\nvar BSER_REAL      = 0x07;\nvar BSER_TRUE      = 0x08;\nvar BSER_FALSE     = 0x09;\nvar BSER_NULL      = 0x0a;\nvar BSER_TEMPLATE  = 0x0b;\nvar BSER_SKIP      = 0x0c;\n\nvar ST_NEED_PDU = 0; // Need to read and decode PDU length\nvar ST_FILL_PDU = 1; // Know the length, need to read whole content\n\nvar MAX_INT8 = 127;\nvar MAX_INT16 = 32767;\nvar MAX_INT32 = 2147483647;\n\nfunction BunserBuf() {\n  EE.call(this);\n  this.buf = new Accumulator();\n  this.state = ST_NEED_PDU;\n}\nutil.inherits(BunserBuf, EE);\nexports.BunserBuf = BunserBuf;\n\nBunserBuf.prototype.append = function(buf, synchronous) {\n  if (synchronous) {\n    this.buf.append(buf);\n    return this.process(synchronous);\n  }\n\n  try {\n    this.buf.append(buf);\n  } catch (err) {\n    this.emit('error', err);\n    return;\n  }\n  // Arrange to decode later.  This allows the consuming\n  // application to make progress with other work in the\n  // case that we have a lot of subscription updates coming\n  // in from a large tree.\n  this.processLater();\n}\n\nBunserBuf.prototype.processLater = function() {\n  var self = this;\n  process.nextTick(function() {\n    try {\n      self.process(false);\n    } catch (err) {\n      self.emit('error', err);\n    }\n  });\n}\n\n// Do something with the buffer to advance our state.\n// If we're running synchronously we'll return either\n// the value we've decoded or undefined if we don't\n// yet have enought data.\n// If we're running asynchronously, we'll emit the value\n// when it becomes ready and schedule another invocation\n// of process on the next tick if we still have data we\n// can process.\nBunserBuf.prototype.process = function(synchronous) {\n  if (this.state == ST_NEED_PDU) {\n    if (this.buf.readAvail() < 2) {\n      return;\n    }\n    // Validate BSER header\n    this.expectCode(0);\n    this.expectCode(1);\n    this.pduLen = this.decodeInt(true /* relaxed */);\n    if (this.pduLen === false) {\n      // Need more data, walk backwards\n      this.buf.readAdvance(-2);\n      return;\n    }\n    // Ensure that we have a big enough buffer to read the rest of the PDU\n    this.buf.reserve(this.pduLen);\n    this.state = ST_FILL_PDU;\n  }\n\n  if (this.state == ST_FILL_PDU) {\n    if (this.buf.readAvail() < this.pduLen) {\n      // Need more data\n      return;\n    }\n\n    // We have enough to decode it\n    var val = this.decodeAny();\n    if (synchronous) {\n      return val;\n    }\n    this.emit('value', val);\n    this.state = ST_NEED_PDU;\n  }\n\n  if (!synchronous && this.buf.readAvail() > 0) {\n    this.processLater();\n  }\n}\n\nBunserBuf.prototype.raise = function(reason) {\n  throw new Error(reason + \", in Buffer of length \" +\n      this.buf.buf.length + \" (\" + this.buf.readAvail() +\n      \" readable) at offset \" + this.buf.readOffset + \" buffer: \" +\n      JSON.stringify(this.buf.buf.slice(\n          this.buf.readOffset, this.buf.readOffset + 32).toJSON()));\n}\n\nBunserBuf.prototype.expectCode = function(expected) {\n  var code = this.buf.readInt(1);\n  if (code != expected) {\n    this.raise(\"expected bser opcode \" + expected + \" but got \" + code);\n  }\n}\n\nBunserBuf.prototype.decodeAny = function() {\n  var code = this.buf.peekInt(1);\n  switch (code) {\n    case BSER_INT8:\n    case BSER_INT16:\n    case BSER_INT32:\n    case BSER_INT64:\n      return this.decodeInt();\n    case BSER_REAL:\n      this.buf.readAdvance(1);\n      return this.buf.readDouble();\n    case BSER_TRUE:\n      this.buf.readAdvance(1);\n      return true;\n    case BSER_FALSE:\n      this.buf.readAdvance(1);\n      return false;\n    case BSER_NULL:\n      this.buf.readAdvance(1);\n      return null;\n    case BSER_STRING:\n      return this.decodeString();\n    case BSER_ARRAY:\n      return this.decodeArray();\n    case BSER_OBJECT:\n      return this.decodeObject();\n    case BSER_TEMPLATE:\n      return this.decodeTemplate();\n    default:\n      this.raise(\"unhandled bser opcode \" + code);\n  }\n}\n\nBunserBuf.prototype.decodeArray = function() {\n  this.expectCode(BSER_ARRAY);\n  var nitems = this.decodeInt();\n  var arr = [];\n  for (var i = 0; i < nitems; ++i) {\n    arr.push(this.decodeAny());\n  }\n  return arr;\n}\n\nBunserBuf.prototype.decodeObject = function() {\n  this.expectCode(BSER_OBJECT);\n  var nitems = this.decodeInt();\n  var res = {};\n  for (var i = 0; i < nitems; ++i) {\n    var key = this.decodeString();\n    var val = this.decodeAny();\n    res[key] = val;\n  }\n  return res;\n}\n\nBunserBuf.prototype.decodeTemplate = function() {\n  this.expectCode(BSER_TEMPLATE);\n  var keys = this.decodeArray();\n  var nitems = this.decodeInt();\n  var arr = [];\n  for (var i = 0; i < nitems; ++i) {\n    var obj = {};\n    for (var keyidx = 0; keyidx < keys.length; ++keyidx) {\n      if (this.buf.peekInt(1) == BSER_SKIP) {\n        this.buf.readAdvance(1);\n        continue;\n      }\n      var val = this.decodeAny();\n      obj[keys[keyidx]] = val;\n    }\n    arr.push(obj);\n  }\n  return arr;\n}\n\nBunserBuf.prototype.decodeString = function() {\n  this.expectCode(BSER_STRING);\n  var len = this.decodeInt();\n  return this.buf.readString(len);\n}\n\n// This is unusual compared to the other decode functions in that\n// we may not have enough data available to satisfy the read, and\n// we don't want to throw.  This is only true when we're reading\n// the PDU length from the PDU header; we'll set relaxSizeAsserts\n// in that case.\nBunserBuf.prototype.decodeInt = function(relaxSizeAsserts) {\n  if (relaxSizeAsserts && (this.buf.readAvail() < 1)) {\n    return false;\n  } else {\n    this.buf.assertReadableSize(1);\n  }\n  var code = this.buf.peekInt(1);\n  var size = 0;\n  switch (code) {\n    case BSER_INT8:\n      size = 1;\n      break;\n    case BSER_INT16:\n      size = 2;\n      break;\n    case BSER_INT32:\n      size = 4;\n      break;\n    case BSER_INT64:\n      size = 8;\n      break;\n    default:\n      this.raise(\"invalid bser int encoding \" + code);\n  }\n\n  if (relaxSizeAsserts && (this.buf.readAvail() < 1 + size)) {\n    return false;\n  }\n  this.buf.readAdvance(1);\n  return this.buf.readInt(size);\n}\n\n// synchronously BSER decode a string and return the value\nfunction loadFromBuffer(input) {\n  var buf = new BunserBuf();\n  var result = buf.append(input, true);\n  if (buf.buf.readAvail()) {\n    throw Error(\n        'excess data found after input buffer, use BunserBuf instead');\n  }\n  if (typeof result === 'undefined') {\n    throw Error(\n        'no bser found in string and no error raised!?');\n  }\n  return result;\n}\nexports.loadFromBuffer = loadFromBuffer\n\n// Byteswap an arbitrary buffer, flipping from one endian\n// to the other, returning a new buffer with the resultant data\nfunction byteswap64(buf) {\n  var swap = Buffer.alloc(buf.length);\n  for (var i = 0; i < buf.length; i++) {\n    swap[i] = buf[buf.length -1 - i];\n  }\n  return swap;\n}\n\nfunction dump_int64(buf, val) {\n  // Get the raw bytes.  The Int64 buffer is big endian\n  var be = val.toBuffer();\n\n  if (isBigEndian) {\n    // We're a big endian system, so the buffer is exactly how we\n    // want it to be\n    buf.writeByte(BSER_INT64);\n    buf.append(be);\n    return;\n  }\n  // We need to byte swap to get the correct representation\n  var le = byteswap64(be);\n  buf.writeByte(BSER_INT64);\n  buf.append(le);\n}\n\nfunction dump_int(buf, val) {\n  var abs = Math.abs(val);\n  if (abs <= MAX_INT8) {\n    buf.writeByte(BSER_INT8);\n    buf.writeInt(val, 1);\n  } else if (abs <= MAX_INT16) {\n    buf.writeByte(BSER_INT16);\n    buf.writeInt(val, 2);\n  } else if (abs <= MAX_INT32) {\n    buf.writeByte(BSER_INT32);\n    buf.writeInt(val, 4);\n  } else {\n    dump_int64(buf, new Int64(val));\n  }\n}\n\nfunction dump_any(buf, val) {\n  switch (typeof(val)) {\n    case 'number':\n      // check if it is an integer or a float\n      if (isFinite(val) && Math.floor(val) === val) {\n        dump_int(buf, val);\n      } else {\n        buf.writeByte(BSER_REAL);\n        buf.writeDouble(val);\n      }\n      return;\n    case 'string':\n      buf.writeByte(BSER_STRING);\n      dump_int(buf, Buffer.byteLength(val));\n      buf.append(val);\n      return;\n    case 'boolean':\n      buf.writeByte(val ? BSER_TRUE : BSER_FALSE);\n      return;\n    case 'object':\n      if (val === null) {\n        buf.writeByte(BSER_NULL);\n        return;\n      }\n      if (val instanceof Int64) {\n        dump_int64(buf, val);\n        return;\n      }\n      if (Array.isArray(val)) {\n        buf.writeByte(BSER_ARRAY);\n        dump_int(buf, val.length);\n        for (var i = 0; i < val.length; ++i) {\n          dump_any(buf, val[i]);\n        }\n        return;\n      }\n      buf.writeByte(BSER_OBJECT);\n      var keys = Object.keys(val);\n\n      // First pass to compute number of defined keys\n      var num_keys = keys.length;\n      for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var v = val[key];\n        if (typeof(v) == 'undefined') {\n          num_keys--;\n        }\n      }\n      dump_int(buf, num_keys);\n      for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var v = val[key];\n        if (typeof(v) == 'undefined') {\n          // Don't include it\n          continue;\n        }\n        dump_any(buf, key);\n        try {\n          dump_any(buf, v);\n        } catch (e) {\n          throw new Error(\n            e.message + ' (while serializing object property with name `' +\n              key + \"')\");\n        }\n      }\n      return;\n\n    default:\n      throw new Error('cannot serialize type ' + typeof(val) + ' to BSER');\n  }\n}\n\n// BSER encode value and return a buffer of the contents\nfunction dumpToBuffer(val) {\n  var buf = new Accumulator();\n  // Build out the header\n  buf.writeByte(0);\n  buf.writeByte(1);\n  // Reserve room for an int32 to hold our PDU length\n  buf.writeByte(BSER_INT32);\n  buf.writeInt(0, 4); // We'll come back and fill this in at the end\n\n  dump_any(buf, val);\n\n  // Compute PDU length\n  var off = buf.writeOffset;\n  var len = off - 7 /* the header length */;\n  buf.writeOffset = 3; // The length value to fill in\n  buf.writeInt(len, 4); // write the length in the space we reserved\n  buf.writeOffset = off;\n\n  return buf.buf.slice(0, off);\n}\nexports.dumpToBuffer = dumpToBuffer\n"},"lineCount":589}},"error":null,"hash":"bd81a907c527a72598e9fcf5e413e5ae","cacheData":{"env":{}}}